<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/edit/editFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract/edit">
	
	<!-- note: this flow inherits from the abstract/edit flow -->

	<persistence-context />

	<!-- Flow input parameters -->
	<!-- tdProductModel: the entity to edit. If null, then we create it here -->
	<input name="tdProductModel" required="false" value="flowScope.tdProductModel"/>	
	<on-start>
		<evaluate expression="tdProductModelController.newIfNull(tdProductModel)" result="flowScope.tdProductModel" />
	</on-start>

	<decision-state id="startChoice">
		<if test="sub" then="tdProductModelSubEdit" else="tdProductModelEdit" />
	</decision-state>

	<!-- EDIT -->
	<view-state id="tdProductModelEdit" parent="#tdProductModelEditCommon">
		<on-render>
			<evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,tdProductModel.id,tdProductModelConverter.print(tdProductModel))" />
		</on-render>

		<transition on="send">
			<evaluate expression="messageUtil.info('status_submitted_ok')" />
		</transition>

		<transition on="save">
			<evaluate expression="tdProductModelController.save(tdProductModel)" />
		</transition>

		<transition on="saveAndClose">
			<evaluate expression="tdProductModelController.saveAndClose(tdProductModel)" />
		</transition>

		<transition on="close">
			<evaluate expression="primeFacesUtil.showAskForSaveDialog(persistenceContext,tdProductModel)"/>
		</transition>

		<transition on="deleteAndClose" to="deleteAndClose">
			<evaluate expression="tdProductModelController.delete(tdProductModel)" />
		</transition>
	</view-state>

	<!-- SUB-EDIT -->
	<view-state id="tdProductModelSubEdit" view="tdProductModelEdit.xhtml" parent="#tdProductModelEditCommon">
		<transition on="ok">
			<evaluate expression="primeFacesUtil.forceClose()" />
		</transition>
		<transition on="cancel" to="cancelEdit" />
	</view-state>
 
 <!-- COMMON-EDIT -->
	<view-state id="tdProductModelEditCommon">

		<!-- product transitions (x-to-one) -->
		<transition on="selectProduct" to="selectProduct" />
		<transition on="editProduct" to="editProduct">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewProduct" to="editProduct">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- makeModel transitions (x-to-one) -->
		<transition on="selectMakeModel" to="selectMakeModel" />
		<transition on="editMakeModel" to="editMakeModel">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewMakeModel" to="editMakeModel">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
	</view-state>

	<!-- SUBFLOW product (x-to-one) -->
	<subflow-state id="selectProduct" subflow="tdProduct">
		<input name="sub" value="true" />
		<transition on="tdProductSelected" to="startChoice">
			<evaluate expression="tdProductModel.setProduct(currentEvent.attributes.tdProductSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdProductModel_product)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editProduct" subflow="tdProduct/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdProduct" value="tdProductModel.product" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdProductModel_product)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW makeModel (x-to-one) -->
	<subflow-state id="selectMakeModel" subflow="tdMakeModel">
		<input name="sub" value="true" />
		<transition on="tdMakeModelSelected" to="startChoice">
			<evaluate expression="tdProductModel.setMakeModel(currentEvent.attributes.tdMakeModelSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdProductModel_makeModel)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editMakeModel" subflow="tdMakeModel/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdMakeModel" value="tdProductModel.makeModel" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdProductModel_makeModel)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	
	<end-state id="endEdit">
		<output name="tdProductModel" value="tdProductModel" />
	</end-state>
</flow>