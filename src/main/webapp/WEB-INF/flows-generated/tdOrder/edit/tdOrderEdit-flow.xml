<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/edit/editFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract/edit">
	
	<!-- note: this flow inherits from the abstract/edit flow -->

	<persistence-context />

	<!-- Flow input parameters -->
	<!-- tdOrder: the entity to edit. If null, then we create it here -->
	<input name="tdOrder" required="false" value="flowScope.tdOrder"/>	
	<on-start>
		<evaluate expression="tdOrderController.newIfNull(tdOrder)" result="flowScope.tdOrder" />
	</on-start>

	<decision-state id="startChoice">
		<if test="sub" then="tdOrderSubEdit" else="tdOrderEdit" />
	</decision-state>

	<!-- EDIT -->
	<view-state id="tdOrderEdit" parent="#tdOrderEditCommon">
		<on-render>
			<evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,tdOrder.id,tdOrderConverter.print(tdOrder))" />
		</on-render>

		<transition on="send">
			<evaluate expression="messageUtil.info('status_submitted_ok')" />
		</transition>

		<transition on="save">
			<evaluate expression="tdOrderController.save(tdOrder)" />
		</transition>

		<transition on="saveAndClose">
			<evaluate expression="tdOrderController.saveAndClose(tdOrder)" />
		</transition>

		<transition on="close">
			<evaluate expression="primeFacesUtil.showAskForSaveDialog(persistenceContext,tdOrder)"/>
		</transition>

		<transition on="deleteAndClose" to="deleteAndClose">
			<evaluate expression="tdOrderController.delete(tdOrder)" />
		</transition>
	</view-state>

	<!-- SUB-EDIT -->
	<view-state id="tdOrderSubEdit" view="tdOrderEdit.xhtml" parent="#tdOrderEditCommon">
		<transition on="ok">
			<evaluate expression="primeFacesUtil.forceClose()" />
		</transition>
		<transition on="cancel" to="cancelEdit" />
	</view-state>

	<!-- COMMON-EDIT -->
	<view-state id="tdOrderEditCommon">

		<!-- billingCity transitions (x-to-one) -->
		<transition on="selectBillingCity" to="selectBillingCity" />
		<transition on="editBillingCity" to="editBillingCity">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewBillingCity" to="editBillingCity">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- shipmentCity transitions (x-to-one) -->
		<transition on="selectShipmentCity" to="selectShipmentCity" />
		<transition on="editShipmentCity" to="editShipmentCity">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewShipmentCity" to="editShipmentCity">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- shipmentState transitions (x-to-one) -->
		<transition on="selectShipmentState" to="selectShipmentState" />
		<transition on="editShipmentState" to="editShipmentState">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewShipmentState" to="editShipmentState">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- user transitions (x-to-one) -->
		<transition on="selectUser" to="selectUser" />
		<transition on="editUser" to="editUser">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewUser" to="editUser">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- product transitions (x-to-one) -->
		<transition on="selectProduct" to="selectProduct" />
		<transition on="editProduct" to="editProduct">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewProduct" to="editProduct">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- shipmentCountry transitions (x-to-one) -->
		<transition on="selectShipmentCountry" to="selectShipmentCountry" />
		<transition on="editShipmentCountry" to="editShipmentCountry">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewShipmentCountry" to="editShipmentCountry">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- billingCountry transitions (x-to-one) -->
		<transition on="selectBillingCountry" to="selectBillingCountry" />
		<transition on="editBillingCountry" to="editBillingCountry">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewBillingCountry" to="editBillingCountry">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- assignedToUser transitions (x-to-one) -->
		<transition on="selectAssignedToUser" to="selectAssignedToUser" />
		<transition on="editAssignedToUser" to="editAssignedToUser">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewAssignedToUser" to="editAssignedToUser">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- billingState transitions (x-to-one) -->
		<transition on="selectBillingState" to="selectBillingState" />
		<transition on="editBillingState" to="editBillingState">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewBillingState" to="editBillingState">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
	</view-state>

	<!-- SUBFLOW billingCity (x-to-one) -->
	<subflow-state id="selectBillingCity" subflow="tdCity">
		<input name="sub" value="true" />
		<transition on="tdCitySelected" to="startChoice">
			<evaluate expression="tdOrder.setBillingCity(currentEvent.attributes.tdCitySelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_billingCity)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editBillingCity" subflow="tdCity/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdCity" value="tdOrder.billingCity" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_billingCity)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW shipmentCity (x-to-one) -->
	<subflow-state id="selectShipmentCity" subflow="tdCity">
		<input name="sub" value="true" />
		<transition on="tdCitySelected" to="startChoice">
			<evaluate expression="tdOrder.setShipmentCity(currentEvent.attributes.tdCitySelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_shipmentCity)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editShipmentCity" subflow="tdCity/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdCity" value="tdOrder.shipmentCity" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_shipmentCity)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW shipmentState (x-to-one) -->
	<subflow-state id="selectShipmentState" subflow="tdState">
		<input name="sub" value="true" />
		<transition on="tdStateSelected" to="startChoice">
			<evaluate expression="tdOrder.setShipmentState(currentEvent.attributes.tdStateSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_shipmentState)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editShipmentState" subflow="tdState/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdState" value="tdOrder.shipmentState" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_shipmentState)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW user (x-to-one) -->
	<subflow-state id="selectUser" subflow="tdUserAuth">
		<input name="sub" value="true" />
		<transition on="tdUserAuthSelected" to="startChoice">
			<evaluate expression="tdOrder.setUser(currentEvent.attributes.tdUserAuthSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_user)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editUser" subflow="tdUserAuth/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdUserAuth" value="tdOrder.user" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_user)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW product (x-to-one) -->
	<subflow-state id="selectProduct" subflow="tdProduct">
		<input name="sub" value="true" />
		<transition on="tdProductSelected" to="startChoice">
			<evaluate expression="tdOrder.setProduct(currentEvent.attributes.tdProductSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_product)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editProduct" subflow="tdProduct/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdProduct" value="tdOrder.product" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_product)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW shipmentCountry (x-to-one) -->
	<subflow-state id="selectShipmentCountry" subflow="tdCountry">
		<input name="sub" value="true" />
		<transition on="tdCountrySelected" to="startChoice">
			<evaluate expression="tdOrder.setShipmentCountry(currentEvent.attributes.tdCountrySelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_shipmentCountry)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editShipmentCountry" subflow="tdCountry/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdCountry" value="tdOrder.shipmentCountry" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_shipmentCountry)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW billingCountry (x-to-one) -->
	<subflow-state id="selectBillingCountry" subflow="tdCountry">
		<input name="sub" value="true" />
		<transition on="tdCountrySelected" to="startChoice">
			<evaluate expression="tdOrder.setBillingCountry(currentEvent.attributes.tdCountrySelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_billingCountry)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editBillingCountry" subflow="tdCountry/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdCountry" value="tdOrder.billingCountry" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_billingCountry)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW assignedToUser (x-to-one) -->
	<subflow-state id="selectAssignedToUser" subflow="tdUserAuth">
		<input name="sub" value="true" />
		<transition on="tdUserAuthSelected" to="startChoice">
			<evaluate expression="tdOrder.setAssignedToUser(currentEvent.attributes.tdUserAuthSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_assignedToUser)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editAssignedToUser" subflow="tdUserAuth/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdUserAuth" value="tdOrder.assignedToUser" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_assignedToUser)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW billingState (x-to-one) -->
	<subflow-state id="selectBillingState" subflow="tdState">
		<input name="sub" value="true" />
		<transition on="tdStateSelected" to="startChoice">
			<evaluate expression="tdOrder.setBillingState(currentEvent.attributes.tdStateSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdOrder_billingState)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editBillingState" subflow="tdState/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdState" value="tdOrder.billingState" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdOrder_billingState)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>

	<end-state id="endEdit">
		<output name="tdOrder" value="tdOrder" />
	</end-state>
</flow>