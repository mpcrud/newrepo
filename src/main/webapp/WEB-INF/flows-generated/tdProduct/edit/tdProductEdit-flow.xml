<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/edit/editFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract/edit">
	
	<!-- note: this flow inherits from the abstract/edit flow -->

	<persistence-context />

	<!-- Flow input parameters -->
	<!-- tdProduct: the entity to edit. If null, then we create it here -->
	<input name="tdProduct" required="false" value="flowScope.tdProduct"/>	
	<on-start>
		<evaluate expression="tdProductController.newIfNull(tdProduct)" result="flowScope.tdProduct" />
	</on-start>

	<decision-state id="startChoice">
		<if test="sub" then="tdProductSubEdit" else="tdProductEdit" />
	</decision-state>

	<!-- EDIT -->
	<view-state id="tdProductEdit" parent="#tdProductEditCommon">
		<on-render>
			<evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,tdProduct.id,tdProductConverter.print(tdProduct))" />
		</on-render>

		<transition on="send">
			<evaluate expression="messageUtil.info('status_submitted_ok')" />
		</transition>

		<transition on="save">
			<evaluate expression="tdProductController.save(tdProduct)" />
		</transition>

		<transition on="saveAndClose">
			<evaluate expression="tdProductController.save(tdProduct)" />

		</transition>

		<transition on="close">
			<evaluate expression="primeFacesUtil.showAskForSaveDialog(persistenceContext,tdProduct)"/>
		</transition>

		<transition on="deleteAndClose" to="deleteAndClose">
			<evaluate expression="tdProductController.delete(tdProduct)" />
		</transition>


	</view-state>
    
    <!-- SUB-EDIT -->
	<view-state id="tdProductSubEdit" view="tdProductEdit.xhtml" parent="#tdProductEditCommon">
		<transition on="ok">
			<evaluate expression="primeFacesUtil.forceClose()" />
		</transition>
		<transition on="cancel" to="cancelEdit" />
	</view-state>
	
	<view-state id="tdProductEditCommon">
		<!-- TagGrpTagMapping transitions  -->
        <transition on="selectproductSupplier" to="selectproductSupplier" />
        <transition on="editproductSupplier" to="editproductSupplier">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewproductSupplier" to="editproductSupplier">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- topic transitions (x-to-one) -->
		<transition on="selectproductShipment" to="selectproductShipment" />
		<transition on="editproductShipment" to="editproductShipment">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewproductShipment" to="editproductShipment">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<transition on="editTagGrpTagMapping" to="editTagGrpTagMapping">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
    </view-state>
	
	<!-- SUBFLOW TagGrpTagMapping -->
	<subflow-state id="editTagGrpTagMapping" subflow="tdTagGrpTagMapping/edit">
		<input name="sub" value="false" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<transition on="endEdit" to="endEdit"/>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW user (x-to-one) -->
	<subflow-state id="selectproductSupplier" subflow="tdProductSupplier">
		<input name="sub" value="true" />
		<transition on="tdProductSupplierSelected" to="startChoice">
			<evaluate expression="tdProduct.setProductSupplier(currentEvent.attributes.tdProductSupplierSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdProduct_productSupplier)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editproductSupplier" subflow="tdProductSupplier/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdProductSupplier" value="tdProduct.productSupplier" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdProduct_productSupplier)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW topic (x-to-one) -->
	<subflow-state id="selectproductShipment" subflow="tdProductShipment">
		<input name="sub" value="true" />
		<transition on="tdProductShipmentSelected" to="startChoice">
			<evaluate expression="tdProduct.setProductShipment(currentEvent.attributes.tdProductShipmentSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdProduct_productShipment)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editproductShipment" subflow="tdProductShipment/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="tdProductShipment" value="tdProduct.productShipment" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.tdProduct_productShipment)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>

	<end-state id="endEdit">
		<output name="tdProduct" value="tdProduct" />
	</end-state>
</flow>