<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/selectFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract">
	<!-- note: this flow inherits from the 'abstract' flow -->

	<persistence-context />

	<var name="tdProductLazyDataModel" class="com.app.mpadmin.web.domain.ProductWithoutTagLazyDataModel" />
    <var name="tdTagLazyDataModel" class="com.app.mpadmin.web.domain.TdTagLazyDataModel" />

    <input name="tdTagGrp" required="false" value="flowScope.tdTagGrp"/>

    <on-start>
		<evaluate expression="tdTagGrpController.newIfNull(tdTagGrp)" result="flowScope.tdTagGrp" />
	</on-start>

	<decision-state id="selectChoice">
		<if test="create" then="edit" />
		<if test="sub" then="tdProductSubSelect" else="productsWithoutTag" />
	</decision-state>

	<view-state id="productsWithoutTag">
		<on-entry>
			<evaluate expression="messageUtil.displayDelayedMessages()" />
			<evaluate expression="persistenceContext.clear()" />
		</on-entry>
		<on-render>
			<evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,'select')" />
		</on-render>
		<transition on="select" to="checkIfAlreadyOpenFlow" validate="false"/>
		<transition on="delete" validate="false">
			<evaluate expression="tdProductController.delete(tdProductLazyDataModel.selectedRow)" />
		</transition>
		<transition on="sendNew" to="edit" validate="false" />
        <transition on="selectProduct">
            <evaluate expression="tdTagGrp.setProductToSelect(tdProductLazyDataModel.selectedRow)" />
            <evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.tdTagGrpTag_product)" />
            <evaluate expression="primeFacesUtil.refresh()"/>
        </transition>
        <transition on="save">
			<evaluate expression="tdTagGrpController.save(tdTagGrp)" />
		</transition>

		<transition on="saveAndClose">
		<!--	<evaluate expression="tdTagGrpController.save(tdTagGrp)" />      -->
            <evaluate expression="tdTagGrpController.saveToReturn(tdTagGrp)" result-type="com.app.mpadmin.domain.TdTagGrp" result="flowScope.newTagGrp"/>
            <evaluate expression="tdTagGrpTagMappingController.saveByComponents(newTagGrp,tdTagLazyDataModel.selectedList)"/>
            <evaluate expression="primeFacesUtil.forceClose()"/>
         </transition>

     <transition on="editTagGrpTagMapping" to="editTagGrpTagMapping">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>

     <transition on="forceClose" to="quit" />

	</view-state>

	<view-state id="tdProductSubSelect" view="productsWithoutTag.xhtml">
		<transition on="select" to="tdProductSelected" validate="false"/>
	</view-state>

	<decision-state id="checkIfAlreadyOpenFlow">
		<if test="flowsMenuHandler.isFlowAlreadyOpen(flowRequestContext,tdProductLazyDataModel.selectedRow)" 
			then="endSwitchToAlreadyOpenFlow"
			else="edit" />
	</decision-state>

	<subflow-state id="edit" subflow="tdProduct/edit">
		<input name="tdProduct" value="tdProductLazyDataModel.selectedRow" />
		<transition on="endEdit" to="quitChoice" />
		<transition on="deleteAndClose" to="productsWithoutTag" />
	</subflow-state>

    <subflow-state id="editTagGrpTagMapping" subflow="tdTagGrpTagMapping/edit">
		<input name="sub" value="false" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<transition on="endEdit" to="quitChoice"/>
		<transition on="cancelEdit" to="quitChoice" />
	</subflow-state>

	<decision-state id="quitChoice">
		<if test="create" then="quit" else="productsWithoutTag"/>
	</decision-state>

	<end-state id="endSwitchToAlreadyOpenFlow"
		view="externalRedirect:contextRelative:#{flowsMenuHandler.endStateRedirectToAlreadyOpenFlow(flowRequestContext,tdProductLazyDataModel.selectedRow)}" />

	<end-state id="tdProductSelected">
		<output name="tdProductSelected" value="tdProductLazyDataModel.selectedRow" />
	</end-state>

	<global-transitions>
		<transition on="search">
			<evaluate expression="tdProductLazyDataModel.onSearch()" />
		</transition>
	</global-transitions>
</flow>