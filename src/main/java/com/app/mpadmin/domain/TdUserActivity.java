/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/domain/Entity.e.vm.java
 */
package com.app.mpadmin.domain;

import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import com.app.mpadmin.domain.PersistableHashBuilder;
import com.app.mpadmin.domain.TdUserAuth;
import com.google.common.base.Objects;

@Entity
@Table(name = "td_user_activity")
@Cache(usage = NONSTRICT_READ_WRITE)
public class TdUserActivity implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(TdUserActivity.class);

    // Raw attributes
    private Integer userActivityId; // pk
    private Date userLogintime;
    private Integer duration;
    private Integer viewCount;
    private Integer replyCount;
    private String ipaddress;
    private Integer currentStatus;
    private Date creationDate;
    private Date updationDate;
    private Integer isActive;
    private Integer sessionPage;

    // Technical attributes for query by example
    private Integer userId;

    // Many to one
    private TdUserAuth user; // (userId)

    // ---------------------------
    // Constructors
    // ---------------------------

    public TdUserActivity() {
    }

    public TdUserActivity(Integer primaryKey) {
        setId(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Override
    @Transient
    @XmlTransient
    public Integer getId() {
        return getUserActivityId();
    }

    @Override
    public void setId(Integer userActivityId) {
        setUserActivityId(userActivityId);
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return isUserActivityIdSet();
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [userActivityId] ------------------------

    @Column(name = "user_activity_id", precision = 10)
    @GeneratedValue
    @Id
    public Integer getUserActivityId() {
        return userActivityId;
    }

    public void setUserActivityId(Integer userActivityId) {
        this.userActivityId = userActivityId;
    }

    @Transient
    public boolean isUserActivityIdSet() {
        return userActivityId != null;
    }

    // -- [userId] ------------------------

    @Column(name = "user_id", precision = 10, insertable = false, updatable = false)
    public Integer getUserId() {
        return userId;
    }

    private void setUserId(Integer userId) {
        this.userId = userId;
    }

    // -- [userLogintime] ------------------------

    @Column(name = "user_logintime", length = 19)
    @Temporal(TIMESTAMP)
    public Date getUserLogintime() {
        return userLogintime;
    }

    public void setUserLogintime(Date userLogintime) {
        this.userLogintime = userLogintime;
    }

    // -- [duration] ------------------------

    @Column(precision = 10)
    public Integer getDuration() {
        return duration;
    }

    public void setDuration(Integer duration) {
        this.duration = duration;
    }

    // -- [viewCount] ------------------------

    @Column(name = "view_count", precision = 10)
    public Integer getViewCount() {
        return viewCount;
    }

    public void setViewCount(Integer viewCount) {
        this.viewCount = viewCount;
    }

    // -- [replyCount] ------------------------

    @Column(name = "reply_count", precision = 10)
    public Integer getReplyCount() {
        return replyCount;
    }

    public void setReplyCount(Integer replyCount) {
        this.replyCount = replyCount;
    }

    // -- [ipaddress] ------------------------

    @Size(max = 8)
    @Column(length = 8)
    public String getIpaddress() {
        return ipaddress;
    }

    public void setIpaddress(String ipaddress) {
        this.ipaddress = ipaddress;
    }

    // -- [currentStatus] ------------------------

    @Column(name = "current_status", precision = 5)
    public Integer getCurrentStatus() {
        return currentStatus;
    }

    public void setCurrentStatus(Integer currentStatus) {
        this.currentStatus = currentStatus;
    }

    // -- [creationDate] ------------------------

    @Column(name = "creation_date", length = 19)
    @Temporal(TIMESTAMP)
    public Date getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    // -- [updationDate] ------------------------

    @Column(name = "updation_date", length = 19)
    @Temporal(TIMESTAMP)
    public Date getUpdationDate() {
        return updationDate;
    }

    public void setUpdationDate(Date updationDate) {
        this.updationDate = updationDate;
    }

    // -- [isActive] ------------------------

    @Column(name = "is_active", precision = 5)
    public Integer getIsActive() {
        return isActive;
    }

    public void setIsActive(Integer isActive) {
        this.isActive = isActive;
    }

    // -- [sessionPage] ------------------------

    @Column(name = "session_page", precision = 10)
    public Integer getSessionPage() {
        return sessionPage;
    }

    public void setSessionPage(Integer sessionPage) {
        this.sessionPage = sessionPage;
    }

    // --------------------------------------------------------------------
    // Many to One support
    // --------------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: TdUserActivity.userId ==> TdUserAuth.userId
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @Cache(usage = NONSTRICT_READ_WRITE)
    @JoinColumn(name = "user_id")
    @ManyToOne(cascade = PERSIST, fetch = LAZY)
    public TdUserAuth getUser() {
        return user;
    }

    /**
     * Set the user without adding this TdUserActivity instance on the passed user
     * If you want to preserve referential integrity we recommend to use
     * instead the corresponding adder method provided by {@link TdUserAuth}
     */
    public void setUser(TdUserAuth user) {
        this.user = user;

        // We set the foreign key property so it can be used by our JPA search by Example facility.
        if (user != null) {
            setUserId(user.getUserId());
        } else {
            setUserId(null);
        }
    }

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
        setDuration(0);
        setCurrentStatus(0);
        setReplyCount(0);
        setViewCount(0);
        setSessionPage(0);

    }

    /**
     * equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof TdUserActivity && hashCode() == other.hashCode());
    }

    private PersistableHashBuilder persistableHashBuilder = new PersistableHashBuilder();

    @Override
    public int hashCode() {
        return persistableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this TdUserActivity instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("userActivityId", getUserActivityId()) //
                .add("userId", getUserId()) //
                .add("userLogintime", getUserLogintime()) //
                .add("duration", getDuration()) //
                .add("viewCount", getViewCount()) //
                .add("replyCount", getReplyCount()) //
                .add("ipaddress", getIpaddress()) //
                .add("currentStatus", getCurrentStatus()) //
                .add("creationDate", getCreationDate()) //
                .add("updationDate", getUpdationDate()) //
                .add("isActive", getIsActive()) //
                .add("sessionPage", getSessionPage()) //
                .toString();
    }

    @PrePersist
    protected void prePersist() {
        setCreationDate(new Date());
    }
}