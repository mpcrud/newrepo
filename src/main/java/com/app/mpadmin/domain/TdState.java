/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/domain/Entity.e.vm.java
 */
package com.app.mpadmin.domain;

import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import com.app.mpadmin.domain.PersistableHashBuilder;
import com.app.mpadmin.domain.TdCountry;
import com.google.common.base.Objects;

@Entity
@Table(name = "td_state")
@Cache(usage = NONSTRICT_READ_WRITE)
public class TdState implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(TdState.class);

    // Raw attributes
    private Integer stateId; // pk
    private String stateName;
    private Integer importance;
    private String descShort;
    private String descLong;
    private Date creationDate;
    private Date updationDate;

    // Technical attributes for query by example
    private Integer countryId;

    // Many to one
    private TdCountry country; // (countryId)

    // ---------------------------
    // Constructors
    // ---------------------------

    public TdState() {
    }

    public TdState(Integer primaryKey) {
        setId(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Override
    @Transient
    @XmlTransient
    public Integer getId() {
        return getStateId();
    }

    @Override
    public void setId(Integer stateId) {
        setStateId(stateId);
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return isStateIdSet();
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [stateId] ------------------------

    @Column(name = "state_id", precision = 10)
    @GeneratedValue
    @Id
    public Integer getStateId() {
        return stateId;
    }

    public void setStateId(Integer stateId) {
        this.stateId = stateId;
    }

    @Transient
    public boolean isStateIdSet() {
        return stateId != null;
    }

    // -- [stateName] ------------------------

    @Size(max = 512)
    @Column(name = "state_name", length = 512)
    public String getStateName() {
        return stateName;
    }

    public void setStateName(String stateName) {
        this.stateName = stateName;
    }

    // -- [importance] ------------------------

    @Column(precision = 5)
    public Integer getImportance() {
        return importance;
    }

    public void setImportance(Integer importance) {
        this.importance = importance;
    }

    // -- [countryId] ------------------------

    @Column(name = "country_id", precision = 10, insertable = false, updatable = false)
    public Integer getCountryId() {
        return countryId;
    }

    private void setCountryId(Integer countryId) {
        this.countryId = countryId;
    }

    // -- [descShort] ------------------------

    @Size(max = 255)
    @Column(name = "desc_short")
    public String getDescShort() {
        return descShort;
    }

    public void setDescShort(String descShort) {
        this.descShort = descShort;
    }

    // -- [descLong] ------------------------

    @Size(max = 65535)
    @Column(name = "desc_long", length = 65535)
    public String getDescLong() {
        return descLong;
    }

    public void setDescLong(String descLong) {
        this.descLong = descLong;
    }

    // -- [creationDate] ------------------------

    @Column(name = "creation_date", length = 19)
    @Temporal(TIMESTAMP)
    public Date getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    // -- [updationDate] ------------------------

    @Column(name = "updation_date", length = 19)
    @Temporal(TIMESTAMP)
    public Date getUpdationDate() {
        return updationDate;
    }

    public void setUpdationDate(Date updationDate) {
        this.updationDate = updationDate;
    }

    // --------------------------------------------------------------------
    // Many to One support
    // --------------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: TdState.countryId ==> TdCountry.countryId
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @Cache(usage = NONSTRICT_READ_WRITE)
    @JoinColumn(name = "country_id")
    @ManyToOne(cascade = PERSIST, fetch = LAZY)
    public TdCountry getCountry() {
        return country;
    }

    /**
     * Set the country without adding this TdState instance on the passed country
     * If you want to preserve referential integrity we recommend to use
     * instead the corresponding adder method provided by {@link TdCountry}
     */
    public void setCountry(TdCountry country) {
        this.country = country;

        // We set the foreign key property so it can be used by our JPA search by Example facility.
        if (country != null) {
            setCountryId(country.getCountryId());
        } else {
            setCountryId(null);
        }
    }

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
        setImportance(0);
    }

    /**
     * equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof TdState && hashCode() == other.hashCode());
    }

    private PersistableHashBuilder persistableHashBuilder = new PersistableHashBuilder();

    @Override
    public int hashCode() {
        return persistableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this TdState instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("stateId", getStateId()) //
                .add("stateName", getStateName()) //
                .add("importance", getImportance()) //
                .add("countryId", getCountryId()) //
                .add("descShort", getDescShort()) //
                .add("descLong", getDescLong()) //
                .add("creationDate", getCreationDate()) //
                .add("updationDate", getUpdationDate()) //
                .toString();
    }

    @PrePersist
    protected void prePersist() {
        setCreationDate(new Date());
    }
}