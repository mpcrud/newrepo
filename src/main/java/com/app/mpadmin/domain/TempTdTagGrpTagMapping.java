/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/domain/Entity.e.vm.java
 */
package com.app.mpadmin.domain;

import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import com.app.mpadmin.domain.PersistableHashBuilder;
import com.google.common.base.Objects;

@Entity
@Table(name = "temp_td_tag_grp_tag_mapping", uniqueConstraints = { @UniqueConstraint(columnNames = { "tag_grp_id", "tag_id" }) })
@Cache(usage = NONSTRICT_READ_WRITE)
public class TempTdTagGrpTagMapping implements Identifiable<TempTdTagGrpTagMappingPk>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(TempTdTagGrpTagMapping.class);

    // Composite primary key
    private TempTdTagGrpTagMappingPk tempTdTagGrpTagMappingPk = new TempTdTagGrpTagMappingPk();

    // ---------------------------
    // Constructors
    // ---------------------------

    public TempTdTagGrpTagMapping() {
    }

    public TempTdTagGrpTagMapping(TempTdTagGrpTagMappingPk primaryKey) {
        setId(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Override
    @Transient
    @XmlTransient
    public TempTdTagGrpTagMappingPk getId() {
        return getTempTdTagGrpTagMappingPk();
    }

    @Override
    public void setId(TempTdTagGrpTagMappingPk tempTdTagGrpTagMappingPk) {
        setTempTdTagGrpTagMappingPk(tempTdTagGrpTagMappingPk);
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return isTempTdTagGrpTagMappingPkSet();
    }

    // -----------------------
    // Composite Primary Key
    // -----------------------

    /**
     * Returns the composite primary key.
     */
    @EmbeddedId
    public TempTdTagGrpTagMappingPk getTempTdTagGrpTagMappingPk() {
        return tempTdTagGrpTagMappingPk;
    }

    /**
     * Set the composite primary key.
     * @param tempTdTagGrpTagMappingPk the composite primary key.
     */
    public void setTempTdTagGrpTagMappingPk(TempTdTagGrpTagMappingPk tempTdTagGrpTagMappingPk) {
        this.tempTdTagGrpTagMappingPk = tempTdTagGrpTagMappingPk;
    }

    /**
     * Tells whether or not this instance has a non empty composite primary key set.
     * @return true if a non empty primary key is set, false otherwise
     */
    @Transient
    @XmlTransient
    public boolean isTempTdTagGrpTagMappingPkSet() {
        return getTempTdTagGrpTagMappingPk() != null && getTempTdTagGrpTagMappingPk().isTempTdTagGrpTagMappingPkSet();
    }

    /**
     * Helper method to set directly the tagGrpId into the TempTdTagGrpTagMappingPk corresponding field.
     * todo document $pkAttribute.comment
     * @param tagGrpId the tagGrpId
     */
    public void setTagGrpId(Integer tagGrpId) {
        if (getTempTdTagGrpTagMappingPk() == null) {
            setTempTdTagGrpTagMappingPk(new TempTdTagGrpTagMappingPk());
        }

        getTempTdTagGrpTagMappingPk().setTagGrpId(tagGrpId);
    }

    /**
     * Helper method to get directly the tagGrpId from the entity.root.primaryKey.type corresponding field.
     * @return the tagGrpId
     */
    @Transient
    @XmlTransient
    @NotNull
    public Integer getTagGrpId() {
        return getTempTdTagGrpTagMappingPk() != null ? getTempTdTagGrpTagMappingPk().getTagGrpId() : null;
    }

    /**
     * Helper method to set directly the tagId into the TempTdTagGrpTagMappingPk corresponding field.
     * todo document $pkAttribute.comment
     * @param tagId the tagId
     */
    public void setTagId(Integer tagId) {
        if (getTempTdTagGrpTagMappingPk() == null) {
            setTempTdTagGrpTagMappingPk(new TempTdTagGrpTagMappingPk());
        }

        getTempTdTagGrpTagMappingPk().setTagId(tagId);
    }

    /**
     * Helper method to get directly the tagId from the entity.root.primaryKey.type corresponding field.
     * @return the tagId
     */
    @Transient
    @XmlTransient
    @NotNull
    public Integer getTagId() {
        return getTempTdTagGrpTagMappingPk() != null ? getTempTdTagGrpTagMappingPk().getTagId() : null;
    }

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
    }

    /**
     * equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof TempTdTagGrpTagMapping && hashCode() == other.hashCode());
    }

    private PersistableHashBuilder persistableHashBuilder = new PersistableHashBuilder();

    @Override
    public int hashCode() {
        return persistableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this TempTdTagGrpTagMapping instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .toString();
    }
}