/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/domain/Entity.e.vm.java
 */
package com.app.mpadmin.domain;

import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.NamedQuery;
import org.hibernate.validator.constraints.URL;
import com.app.mpadmin.domain.PersistableHashBuilder;
import com.app.mpadmin.domain.TdUserAuth;
import com.google.common.base.Objects;

@NamedQuery(name="TdTopic.NotMappedToTag",
            query="from TdTopic as t where t.topicId not in(select tag.referenceId from TdTagGrp as tag where tag.referenceType!=400) ")

@Entity
@Table(name = "td_topic")
@Cache(usage = NONSTRICT_READ_WRITE)
public class TdTopic implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(TdTopic.class);

    // Raw attributes
    private Integer topicId; // pk
    private String topicTitle;
    private Integer viewCount;
    private Integer commentCount;
    private Date assignedSince;
    private String descShort;
    private String descLong;
    private Integer parentTopicId;
    private Integer twitterCount;
    private Integer facebookCount;
    private String metaDesc;
    private Date creationDate;
    private Date updationDate;
    private Integer isActive;
    private Integer isFeatured;
    private Integer assignedToUser;
    private Date expiryDate;
    private Integer topicStatus;
    private Integer voteCount;
    private Integer customInt1;
    private Integer customInt2;
    private String customVarchar1;
    private String customVarchar2;
    private String seoResources;
    private String metaTitle;
    private String metaKeyword;
    private String seoUrl;
    private String h1;
    private String h2;

    // Technical attributes for query by example
    private Integer userId;

    // Many to one
    private TdUserAuth user; // (userId)

    // ---------------------------
    // Constructors
    // ---------------------------

    public TdTopic() {
    }

    public TdTopic(Integer primaryKey) {
        setId(primaryKey);
    }

    // ---------------------------
    // Identifiable implementation
    // ---------------------------

    @Override
    @Transient
    @XmlTransient
    public Integer getId() {
        return getTopicId();
    }

    @Override
    public void setId(Integer topicId) {
        setTopicId(topicId);
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return isTopicIdSet();
    }

    // -------------------------------
    // Getter & Setter
    // -------------------------------

    // -- [topicId] ------------------------

    @Column(name = "topic_id", precision = 10)
    @GeneratedValue
    @Id
    public Integer getTopicId() {
        return topicId;
    }

    public void setTopicId(Integer topicId) {
        this.topicId = topicId;
    }

    @Transient
    public boolean isTopicIdSet() {
        return topicId != null;
    }

    // -- [topicTitle] ------------------------

    @Size(max = 4096)
    @Column(name = "topic_title", length = 4096)
    public String getTopicTitle() {
        return topicTitle;
    }

    public void setTopicTitle(String topicTitle) {
        this.topicTitle = topicTitle;
    }

    // -- [viewCount] ------------------------

    @Column(name = "view_count", precision = 10)
    public Integer getViewCount() {
        return viewCount;
    }

    public void setViewCount(Integer viewCount) {
        this.viewCount = viewCount;
    }

    // -- [commentCount] ------------------------

    @Column(name = "comment_count", precision = 10)
    public Integer getCommentCount() {
        return commentCount;
    }

    public void setCommentCount(Integer commentCount) {
        this.commentCount = commentCount;
    }

    // -- [assignedSince] ------------------------

    @Column(name = "assigned_since", length = 19)
    @Temporal(TIMESTAMP)
    public Date getAssignedSince() {
        return assignedSince;
    }

    public void setAssignedSince(Date assignedSince) {
        this.assignedSince = assignedSince;
    }

    // -- [descShort] ------------------------

    @Size(max = 1024)
    @Column(name = "desc_short", length = 1024)
    public String getDescShort() {
        return descShort;
    }

    public void setDescShort(String descShort) {
        this.descShort = descShort;
    }

    // -- [descLong] ------------------------

    @Size(max = 4096)
    @Column(name = "desc_long", length = 4096)
    public String getDescLong() {
        return descLong;
    }

    public void setDescLong(String descLong) {
        this.descLong = descLong;
    }

    // -- [userId] ------------------------

    @Column(name = "user_id", precision = 10, insertable = false, updatable = false)
    public Integer getUserId() {
        return userId;
    }

    private void setUserId(Integer userId) {
        this.userId = userId;
    }

    // -- [parentTopicId] ------------------------

    @Column(name = "parent_topic_id", precision = 10)
    public Integer getParentTopicId() {
        return parentTopicId;
    }

    public void setParentTopicId(Integer parentTopicId) {
        this.parentTopicId = parentTopicId;
    }

    // -- [twitterCount] ------------------------

    @Column(name = "twitter_count", precision = 10)
    public Integer getTwitterCount() {
        return twitterCount;
    }

    public void setTwitterCount(Integer twitterCount) {
        this.twitterCount = twitterCount;
    }

    // -- [facebookCount] ------------------------

    @Column(name = "facebook_count", precision = 10)
    public Integer getFacebookCount() {
        return facebookCount;
    }

    public void setFacebookCount(Integer facebookCount) {
        this.facebookCount = facebookCount;
    }

    // -- [metaDesc] ------------------------

    @Size(max = 200)
    @Column(name = "meta_desc", length = 200)
    public String getMetaDesc() {
        return metaDesc;
    }

    public void setMetaDesc(String metaDesc) {
        this.metaDesc = metaDesc;
    }

    // -- [creationDate] ------------------------

    @Column(name = "creation_date", length = 19)
    @Temporal(TIMESTAMP)
    public Date getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    // -- [updationDate] ------------------------

    @Column(name = "updation_date", length = 19)
    @Temporal(TIMESTAMP)
    public Date getUpdationDate() {
        return updationDate;
    }

    public void setUpdationDate(Date updationDate) {
        this.updationDate = updationDate;
    }

    // -- [isActive] ------------------------

    @Column(name = "is_active", precision = 5)
    public Integer getIsActive() {
        return isActive;
    }

    public void setIsActive(Integer isActive) {
        this.isActive = isActive;
    }

    // -- [isFeatured] ------------------------

    @Column(name = "is_featured", precision = 5)
    public Integer getIsFeatured() {
        return isFeatured;
    }

    public void setIsFeatured(Integer isFeatured) {
        this.isFeatured = isFeatured;
    }

    // -- [assignedToUser] ------------------------

    @Column(name = "assigned_to_user", precision = 10)
    public Integer getAssignedToUser() {
        return assignedToUser;
    }

    public void setAssignedToUser(Integer assignedToUser) {
        this.assignedToUser = assignedToUser;
    }

    // -- [expiryDate] ------------------------

    @Column(name = "expiry_date", length = 19)
    @Temporal(TIMESTAMP)
    public Date getExpiryDate() {
        return expiryDate;
    }

    public void setExpiryDate(Date expiryDate) {
        this.expiryDate = expiryDate;
    }

    // -- [topicStatus] ------------------------

    @Column(name = "topic_status", precision = 5)
    public Integer getTopicStatus() {
        return topicStatus;
    }

    public void setTopicStatus(Integer topicStatus) {
        this.topicStatus = topicStatus;
    }

    // -- [voteCount] ------------------------

    @Column(name = "vote_count", precision = 10)
    public Integer getVoteCount() {
        return voteCount;
    }

    public void setVoteCount(Integer voteCount) {
        this.voteCount = voteCount;
    }

    // -- [customInt1] ------------------------

    @Column(name = "custom_int_1", precision = 10)
    public Integer getCustomInt1() {
        return customInt1;
    }

    public void setCustomInt1(Integer customInt1) {
        this.customInt1 = customInt1;
    }

    // -- [customInt2] ------------------------

    @Column(name = "custom_int_2", precision = 10)
    public Integer getCustomInt2() {
        return customInt2;
    }

    public void setCustomInt2(Integer customInt2) {
        this.customInt2 = customInt2;
    }

    // -- [customVarchar1] ------------------------

    @Size(max = 45)
    @Column(name = "custom_varchar_1", length = 45)
    public String getCustomVarchar1() {
        return customVarchar1;
    }

    public void setCustomVarchar1(String customVarchar1) {
        this.customVarchar1 = customVarchar1;
    }

    // -- [customVarchar2] ------------------------

    @Size(max = 45)
    @Column(name = "custom_varchar_2", length = 45)
    public String getCustomVarchar2() {
        return customVarchar2;
    }

    public void setCustomVarchar2(String customVarchar2) {
        this.customVarchar2 = customVarchar2;
    }

    // -- [seoResources] ------------------------

    @Size(max = 256)
    @Column(name = "seo_resources", length = 256)
    public String getSeoResources() {
        return seoResources;
    }

    public void setSeoResources(String seoResources) {
        this.seoResources = seoResources;
    }

    // -- [metaTitle] ------------------------

    @Size(max = 512)
    @Column(name = "meta_title", length = 512)
    public String getMetaTitle() {
        return metaTitle;
    }

    public void setMetaTitle(String metaTitle) {
        this.metaTitle = metaTitle;
    }

    // -- [metaKeyword] ------------------------

    @Size(max = 4096)
    @Column(name = "meta_keyword", length = 4096)
    public String getMetaKeyword() {
        return metaKeyword;
    }

    public void setMetaKeyword(String metaKeyword) {
        this.metaKeyword = metaKeyword;
    }

    // -- [seoUrl] ------------------------
    //@URL
    @Size(max = 256)
    @Column(name = "seo_url", length = 256)
    public String getSeoUrl() {
        return seoUrl;
    }

    public void setSeoUrl(String seoUrl) {
        this.seoUrl = seoUrl;
    }

    // -- [h1] ------------------------

    @Size(max = 256)
    @Column(length = 256)
    public String getH1() {
        return h1;
    }

    public void setH1(String h1) {
        this.h1 = h1;
    }

    // -- [h2] ------------------------

    @Size(max = 256)
    @Column(length = 256)
    public String getH2() {
        return h2;
    }

    public void setH2(String h2) {
        this.h2 = h2;
    }

    // --------------------------------------------------------------------
    // Many to One support
    // --------------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: TdTopic.userId ==> TdUserAuth.userId
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @Cache(usage = NONSTRICT_READ_WRITE)
    @JoinColumn(name = "user_id")
    @ManyToOne(cascade = PERSIST, fetch = LAZY)
    public TdUserAuth getUser() {
        return user;
    }

    /**
     * Set the user without adding this TdTopic instance on the passed user
     * If you want to preserve referential integrity we recommend to use
     * instead the corresponding adder method provided by {@link TdUserAuth}
     */
    public void setUser(TdUserAuth user) {
        this.user = user;

        // We set the foreign key property so it can be used by our JPA search by Example facility.
        if (user != null) {
            setUserId(user.getUserId());
        } else {
            setUserId(null);
        }
    }

    /**
     * Set the default values.
     */
    public void initDefaultValues() {
        setCommentCount(0);
        setViewCount(0);
        setVoteCount(0);
        setIsActive(1);
        setTopicStatus(1);
    }

    /**
     * equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof TdTopic && hashCode() == other.hashCode());
    }

    private PersistableHashBuilder persistableHashBuilder = new PersistableHashBuilder();

    @Override
    public int hashCode() {
        return persistableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this TdTopic instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("topicId", getTopicId()) //
                .add("topicTitle", getTopicTitle()) //
              /*  .add("viewCount", getViewCount()) //
                .add("commentCount", getCommentCount()) //
                .add("assignedSince", getAssignedSince()) //
                .add("descShort", getDescShort()) //
                .add("descLong", getDescLong()) //
                .add("userId", getUserId()) //
                .add("parentTopicId", getParentTopicId()) //
                .add("twitterCount", getTwitterCount()) //
                .add("facebookCount", getFacebookCount()) //
                .add("metaDesc", getMetaDesc()) //
                .add("creationDate", getCreationDate()) //
                .add("updationDate", getUpdationDate()) //
                .add("isActive", getIsActive()) //
                .add("isFeatured", getIsFeatured()) //
                .add("assignedToUser", getAssignedToUser()) //
                .add("expiryDate", getExpiryDate()) //
                .add("topicStatus", getTopicStatus()) //
                .add("voteCount", getVoteCount()) //
                .add("customInt1", getCustomInt1()) //
                .add("customInt2", getCustomInt2()) //
                .add("customVarchar1", getCustomVarchar1()) //
                .add("customVarchar2", getCustomVarchar2()) //
                .add("seoResources", getSeoResources()) //
                .add("metaTitle", getMetaTitle()) //
                .add("metaKeyword", getMetaKeyword()) //
                .add("seoUrl", getSeoUrl()) //
                .add("h1", getH1()) //
                .add("h2", getH2()) //
            */    .toString();
    }

    @PrePersist
    protected void prePersist() {
        setCreationDate(new Date());
    }
}