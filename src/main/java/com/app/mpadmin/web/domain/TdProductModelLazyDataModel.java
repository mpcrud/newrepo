/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/LazyDataModel.e.vm.java
 */
package com.app.mpadmin.web.domain;

import java.util.List;
import java.util.Map;
import javax.inject.Inject;

import org.primefaces.model.SortOrder;

import com.app.mpadmin.dao.support.SearchParameters;
import com.app.mpadmin.domain.TdProductModel;
import com.app.mpadmin.repository.TdProductModelRepository;
import com.app.mpadmin.web.domain.support.GenericLazyDataModel;

/**
 * Provides server-side pagination for search.
 *
 * @see http://jira.springframework.org/browse/SWF-1224 to avoid instanciate it as a var from your flow 
 */
public class TdProductModelLazyDataModel extends GenericLazyDataModel<TdProductModel> {
    private static final long serialVersionUID = 1L;

    @Inject
    transient private TdProductModelRepository tdProductModelRepository;
    @Inject
    transient private TdProductModelSearchForm tdProductModelSearchForm;

    List<TdProductModel> datasource;

    @Override
    public TdProductModel getRowData(String rowKey) {
        for(TdProductModel tdProductModel : datasource) {
            if(tdProductModel.getProductModelId().equals(rowKey))
                return tdProductModel;
        }

        return null;
    }

    @Override
    public Object getRowKey(TdProductModel tdProductModel)
    {
         return tdProductModel.getProductModelId();
    }


    /**
     * Prepare the search parameters and call the tdProductModelRepository finder.
     * Automatically called by PrimeFaces component.
     */
    @Override
    public List<TdProductModel> load(int first, int pageSize, String sortField, SortOrder sortOrder, Map<String, String> filters) {
        SearchParameters sp = tdProductModelSearchForm.getSearchParameters();

        // ranges
        sp.clearRanges();
        //sp.addRange(tdProductModelSearchForm.getMakeModelIdRange());
        //sp.addRange(tdProductModelSearchForm.getProductIdRange());
     // entity selectors
        sp.clearEntitySelectors();
        sp.addEntitySelector(tdProductModelSearchForm.getMakeModelSelector());
        sp.addEntitySelector(tdProductModelSearchForm.getProductSelector());

        TdProductModel tdProductModel = tdProductModelSearchForm.getTdProductModel();
        setRowCount(tdProductModelRepository.findCount(tdProductModel, sp)); // total count so the paginator may display the total number of pages
        populateSearchParameters(sp, first, pageSize, sortField, sortOrder, filters); // load one page of data
        datasource = tdProductModelRepository.find(tdProductModel,sp);
        return datasource;
    }
}