/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/LazyDataModel.e.vm.java
 */
package com.app.mpadmin.web.domain;

import java.util.List;
import java.util.Map;
import javax.inject.Inject;

import org.primefaces.model.SortOrder;

import com.app.mpadmin.dao.support.SearchParameters;
import com.app.mpadmin.domain.TdProductShipment;
import com.app.mpadmin.repository.TdProductShipmentRepository;
import com.app.mpadmin.web.domain.support.GenericLazyDataModel;

/**
 * Provides server-side pagination for search.
 *
 * @see http://jira.springframework.org/browse/SWF-1224 to avoid instanciate it as a var from your flow 
 */
public class TdProductShipmentLazyDataModel extends GenericLazyDataModel<TdProductShipment> {
    private static final long serialVersionUID = 1L;

    @Inject
    transient private TdProductShipmentRepository tdProductShipmentRepository;
    @Inject
    transient private TdProductShipmentSearchForm tdProductShipmentSearchForm;

List<TdProductShipment> datasource;

    @Override
    public TdProductShipment getRowData(String rowKey) {
        for(TdProductShipment tdProductShipment : datasource) {
            if(tdProductShipment.getProductShipmentId().equals(rowKey))
                return tdProductShipment;
        }

        return null;
    }

    @Override
    public Object getRowKey(TdProductShipment tdProductShipment)
    {
         return tdProductShipment.getProductShipmentId();
    }


    /**
     * Prepare the search parameters and call the tdProductShipmentRepository finder.
     * Automatically called by PrimeFaces component.
     */
    @Override
    public List<TdProductShipment> load(int first, int pageSize, String sortField, SortOrder sortOrder, Map<String, String> filters) {
        SearchParameters sp = tdProductShipmentSearchForm.getSearchParameters();

        // ranges
        sp.clearRanges();
        sp.addRange(tdProductShipmentSearchForm.getShipmentMrpCostRange());
        sp.addRange(tdProductShipmentSearchForm.getShipmentDiscountRange());
        sp.addRange(tdProductShipmentSearchForm.getShipmentDurationRange());
        sp.addRange(tdProductShipmentSearchForm.getShipmentTypeRange());
        sp.addRange(tdProductShipmentSearchForm.getUpdationDateRange());
        sp.addRange(tdProductShipmentSearchForm.getProductShipmentIdRange());
        // property selectors
        sp.clearPropertySelectors();
        sp.addPropertySelector(tdProductShipmentSearchForm.getShipmentStatusSelector());

        // entity selectors
        sp.clearEntitySelectors();
        sp.addEntitySelector(tdProductShipmentSearchForm.getShipmentVendorSelector());

        TdProductShipment tdProductShipment = tdProductShipmentSearchForm.getTdProductShipment();
        setRowCount(tdProductShipmentRepository.findCount(tdProductShipment, sp)); // total count so the paginator may display the total number of pages
        populateSearchParameters(sp, first, pageSize, sortField, sortOrder, filters); // load one page of data
        datasource = tdProductShipmentRepository.find(tdProductShipment, sp);
        return datasource;
    }
}