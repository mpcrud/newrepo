/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/LazyDataModel.e.vm.java
 */
package com.app.mpadmin.web.domain;

import java.util.List;
import java.util.Map;
import javax.inject.Inject;

import org.primefaces.model.SortOrder;

import com.app.mpadmin.dao.support.SearchParameters;
import com.app.mpadmin.domain.TdComment;
import com.app.mpadmin.repository.TdCommentRepository;
import com.app.mpadmin.web.domain.support.GenericLazyDataModel;

/**
 * Provides server-side pagination for search.
 *
 * @see http://jira.springframework.org/browse/SWF-1224 to avoid instanciate it as a var from your flow 
 */
public class TdCommentLazyDataModel extends GenericLazyDataModel<TdComment> {
    private static final long serialVersionUID = 1L;

    @Inject
    transient private TdCommentRepository tdCommentRepository;    
    @Inject
    transient private TdCommentSearchForm tdCommentSearchForm;

    List<TdComment> datasource;

        @Override
        public TdComment getRowData(String rowKey) {
            for(TdComment tdComment : datasource) {
                if(tdComment.getCommentId().equals(rowKey))
                    return tdComment;
            }

            return null;
        }

        @Override
        public Object getRowKey(TdComment tdTag)
        {
             return tdTag.getCommentId();
        }
    /**
     * Prepare the search parameters and call the tdCommentRepository finder.
     * Automatically called by PrimeFaces component.
     */
    @Override
    public List<TdComment> load(int first, int pageSize, String sortField, SortOrder sortOrder, Map<String, String> filters) {
        SearchParameters sp = tdCommentSearchForm.getSearchParameters();

        // ranges
        sp.clearRanges();
        //sp.addRange(tdCommentSearchForm.getTopicIdRange());
        sp.addRange(tdCommentSearchForm.getCommentCountRange());
        //sp.addRange(tdCommentSearchForm.getUserIdRange());
        sp.addRange(tdCommentSearchForm.getUpdationDateRange());
        sp.addRange(tdCommentSearchForm.getIsActiveRange());
        sp.addRange(tdCommentSearchForm.getCommentStatusRange());
     // entity selectors
        sp.clearEntitySelectors();
        sp.addEntitySelector(tdCommentSearchForm.getUserSelector());
        sp.addEntitySelector(tdCommentSearchForm.getTopicSelector());

        TdComment tdComment = tdCommentSearchForm.getTdComment();
        setRowCount(tdCommentRepository.findCount(tdComment, sp)); // total count so the paginator may display the total number of pages
        populateSearchParameters(sp, first, pageSize, sortField, sortOrder, filters); // load one page of data
        datasource= tdCommentRepository.find(tdComment, sp);
        return datasource;
    }
}