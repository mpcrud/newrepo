/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/SearchForm.e.vm.java
 */
package com.app.mpadmin.web.domain;

import static com.app.mpadmin.dao.support.EntitySelectors.TdCitySelector.newTdCitySelector;
import static com.app.mpadmin.dao.support.EntitySelectors.TdCountrySelector.newTdCountrySelector;
import static com.app.mpadmin.dao.support.EntitySelectors.TdProductSelector.newTdProductSelector;
import static com.app.mpadmin.dao.support.EntitySelectors.TdStateSelector.newTdStateSelector;
import static com.app.mpadmin.dao.support.EntitySelectors.TdUserAuthSelector.newTdUserAuthSelector;
import static com.app.mpadmin.dao.support.Ranges.RangeDate.newRangeDate;
import static com.app.mpadmin.dao.support.Ranges.RangeFloat.newRangeFloat;
import static com.app.mpadmin.dao.support.Ranges.RangeInteger.newRangeInteger;
import static com.app.mpadmin.domain.TdOrder_.assignedToUserid;
import static com.app.mpadmin.domain.TdOrder_.assignedToUseridDate;
import static com.app.mpadmin.domain.TdOrder_.billingAdvanceAmount;
import static com.app.mpadmin.domain.TdOrder_.billingBalanceAmount;
import static com.app.mpadmin.domain.TdOrder_.billingCityId;
import static com.app.mpadmin.domain.TdOrder_.billingCountryId;
import static com.app.mpadmin.domain.TdOrder_.billingGrossAmount;
import static com.app.mpadmin.domain.TdOrder_.billingId;
import static com.app.mpadmin.domain.TdOrder_.billingMarginAmount;
import static com.app.mpadmin.domain.TdOrder_.billingNettCost;
import static com.app.mpadmin.domain.TdOrder_.billingPaymentGatewayRate;
import static com.app.mpadmin.domain.TdOrder_.billingPhone1Blocked;
import static com.app.mpadmin.domain.TdOrder_.billingPhone2Blocked;
import static com.app.mpadmin.domain.TdOrder_.billingStateId;
import static com.app.mpadmin.domain.TdOrder_.billingTaxrate;
import static com.app.mpadmin.domain.TdOrder_.billingTotalAmount;
import static com.app.mpadmin.domain.TdOrder_.carYear;
import static com.app.mpadmin.domain.TdOrder_.custPaymentDate;
import static com.app.mpadmin.domain.TdOrder_.custPaymentMode;
import static com.app.mpadmin.domain.TdOrder_.custPaymentStatus;
import static com.app.mpadmin.domain.TdOrder_.customint1;
import static com.app.mpadmin.domain.TdOrder_.customint2;
import static com.app.mpadmin.domain.TdOrder_.deliveryDate;
import static com.app.mpadmin.domain.TdOrder_.deliveryStatus;
import static com.app.mpadmin.domain.TdOrder_.dispatchDate;
import static com.app.mpadmin.domain.TdOrder_.disputeRaisedDate;
import static com.app.mpadmin.domain.TdOrder_.disputeRaisedStatus;
import static com.app.mpadmin.domain.TdOrder_.invoiceId;
import static com.app.mpadmin.domain.TdOrder_.mailedReminderToVendorDate;
import static com.app.mpadmin.domain.TdOrder_.mailedReminderToVendorStatus;
import static com.app.mpadmin.domain.TdOrder_.orderAcceptNewsletter;
import static com.app.mpadmin.domain.TdOrder_.orderAcceptPromotionalMaterial;
import static com.app.mpadmin.domain.TdOrder_.orderActive;
import static com.app.mpadmin.domain.TdOrder_.orderAvailabilityStatus;
import static com.app.mpadmin.domain.TdOrder_.orderAvailabilityStatusUpdationDate;
import static com.app.mpadmin.domain.TdOrder_.orderBulkType;
import static com.app.mpadmin.domain.TdOrder_.orderCancelRequestDate;
import static com.app.mpadmin.domain.TdOrder_.orderCancelRequestStatus;
import static com.app.mpadmin.domain.TdOrder_.orderCancellationDate;
import static com.app.mpadmin.domain.TdOrder_.orderCancellationToVendorDate;
import static com.app.mpadmin.domain.TdOrder_.orderCancellationToVendorStatus;
import static com.app.mpadmin.domain.TdOrder_.orderCancellationType;
import static com.app.mpadmin.domain.TdOrder_.orderConfirmationDate;
import static com.app.mpadmin.domain.TdOrder_.orderConversionDate;
import static com.app.mpadmin.domain.TdOrder_.orderCorporateType;
import static com.app.mpadmin.domain.TdOrder_.orderCreationDate;
import static com.app.mpadmin.domain.TdOrder_.orderFirstUpdationDate;
import static com.app.mpadmin.domain.TdOrder_.orderLastUpdationDate;
import static com.app.mpadmin.domain.TdOrder_.orderOriginCountryId;
import static com.app.mpadmin.domain.TdOrder_.orderPriority;
import static com.app.mpadmin.domain.TdOrder_.orderReconfirmationDate;
import static com.app.mpadmin.domain.TdOrder_.orderRefundDate;
import static com.app.mpadmin.domain.TdOrder_.orderRefundType;
import static com.app.mpadmin.domain.TdOrder_.orderStatus;
import static com.app.mpadmin.domain.TdOrder_.orderType;
import static com.app.mpadmin.domain.TdOrder_.productId;
import static com.app.mpadmin.domain.TdOrder_.productQuantity;
import static com.app.mpadmin.domain.TdOrder_.shipmentCityId;
import static com.app.mpadmin.domain.TdOrder_.shipmentCountryId;
import static com.app.mpadmin.domain.TdOrder_.shipmentRate;
import static com.app.mpadmin.domain.TdOrder_.shipmentStateId;
import static com.app.mpadmin.domain.TdOrder_.userId;
import static com.app.mpadmin.domain.TdOrder_.vendorPaymentDate;
import static com.app.mpadmin.domain.TdOrder_.vendorPaymentMode;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import com.app.mpadmin.dao.support.EntitySelectors.TdCitySelector;
import com.app.mpadmin.dao.support.EntitySelectors.TdCountrySelector;
import com.app.mpadmin.dao.support.EntitySelectors.TdProductSelector;
import com.app.mpadmin.dao.support.EntitySelectors.TdStateSelector;
import com.app.mpadmin.dao.support.EntitySelectors.TdUserAuthSelector;
import com.app.mpadmin.dao.support.Ranges.RangeDate;
import com.app.mpadmin.dao.support.Ranges.RangeFloat;
import com.app.mpadmin.dao.support.Ranges.RangeInteger;
import com.app.mpadmin.domain.TdOrder;
import com.app.mpadmin.web.domain.support.SearchFormBase;

/**
 * Simple parameters holder for tdOrder search.
 */
@Component
@Scope("session")
public class TdOrderSearchForm extends SearchFormBase {
    private static final long serialVersionUID = 1L;

    private TdOrder tdOrder = new TdOrder();
    private RangeInteger<TdOrder> billingIdRange = newRangeInteger(billingId);
    private RangeInteger<TdOrder> invoiceIdRange = newRangeInteger(invoiceId);
    private RangeInteger<TdOrder> orderTypeRange = newRangeInteger(orderType);
    private RangeInteger<TdOrder> orderStatusRange = newRangeInteger(orderStatus);
    private RangeInteger<TdOrder> orderActiveRange = newRangeInteger(orderActive);
    private RangeInteger<TdOrder> orderPriorityRange = newRangeInteger(orderPriority);
    private RangeInteger<TdOrder> orderCorporateTypeRange = newRangeInteger(orderCorporateType);
    private RangeInteger<TdOrder> orderBulkTypeRange = newRangeInteger(orderBulkType);
    private RangeInteger<TdOrder> productQuantityRange = newRangeInteger(productQuantity);
    private RangeDate<TdOrder> assignedToUseridDateRange = newRangeDate(assignedToUseridDate);
    private RangeInteger<TdOrder> billingPhone1BlockedRange = newRangeInteger(billingPhone1Blocked);
    private RangeInteger<TdOrder> billingPhone2BlockedRange = newRangeInteger(billingPhone2Blocked);
    private RangeFloat<TdOrder> billingTotalAmountRange = newRangeFloat(billingTotalAmount);
    private RangeFloat<TdOrder> billingAdvanceAmountRange = newRangeFloat(billingAdvanceAmount);
    private RangeFloat<TdOrder> billingBalanceAmountRange = newRangeFloat(billingBalanceAmount);
    private RangeFloat<TdOrder> billingMarginAmountRange = newRangeFloat(billingMarginAmount);
    private RangeFloat<TdOrder> billingTaxrateRange = newRangeFloat(billingTaxrate);
    private RangeFloat<TdOrder> billingPaymentGatewayRateRange = newRangeFloat(billingPaymentGatewayRate);
    private RangeFloat<TdOrder> shipmentRateRange = newRangeFloat(shipmentRate);
    private RangeFloat<TdOrder> billingGrossAmountRange = newRangeFloat(billingGrossAmount);
    private RangeFloat<TdOrder> billingNettCostRange = newRangeFloat(billingNettCost);
    private RangeInteger<TdOrder> custPaymentModeRange = newRangeInteger(custPaymentMode);
    private RangeInteger<TdOrder> custPaymentStatusRange = newRangeInteger(custPaymentStatus);
    private RangeDate<TdOrder> custPaymentDateRange = newRangeDate(custPaymentDate);
    private RangeInteger<TdOrder> vendorPaymentModeRange = newRangeInteger(vendorPaymentMode);
    private RangeDate<TdOrder> vendorPaymentDateRange = newRangeDate(vendorPaymentDate);
    private RangeInteger<TdOrder> orderOriginCountryIdRange = newRangeInteger(orderOriginCountryId);
    private RangeDate<TdOrder> orderCreationDateRange = newRangeDate(orderCreationDate);
    private RangeDate<TdOrder> orderFirstUpdationDateRange = newRangeDate(orderFirstUpdationDate);
    private RangeInteger<TdOrder> orderAvailabilityStatusRange = newRangeInteger(orderAvailabilityStatus);
    private RangeDate<TdOrder> orderAvailabilityStatusUpdationDateRange = newRangeDate(orderAvailabilityStatusUpdationDate);
    private RangeDate<TdOrder> dispatchDateRange = newRangeDate(dispatchDate);
    private RangeDate<TdOrder> deliveryDateRange = newRangeDate(deliveryDate);
    private RangeInteger<TdOrder> deliveryStatusRange = newRangeInteger(deliveryStatus);
    private RangeInteger<TdOrder> mailedReminderToVendorStatusRange = newRangeInteger(mailedReminderToVendorStatus);
    private RangeDate<TdOrder> mailedReminderToVendorDateRange = newRangeDate(mailedReminderToVendorDate);
    private RangeInteger<TdOrder> orderCancelRequestStatusRange = newRangeInteger(orderCancelRequestStatus);
    private RangeDate<TdOrder> orderCancelRequestDateRange = newRangeDate(orderCancelRequestDate);
    private RangeInteger<TdOrder> orderCancellationToVendorStatusRange = newRangeInteger(orderCancellationToVendorStatus);
    private RangeDate<TdOrder> orderCancellationToVendorDateRange = newRangeDate(orderCancellationToVendorDate);
    private RangeDate<TdOrder> orderConversionDateRange = newRangeDate(orderConversionDate);
    private RangeDate<TdOrder> orderConfirmationDateRange = newRangeDate(orderConfirmationDate);
    private RangeDate<TdOrder> orderReconfirmationDateRange = newRangeDate(orderReconfirmationDate);
    private RangeInteger<TdOrder> orderCancellationTypeRange = newRangeInteger(orderCancellationType);
    private RangeDate<TdOrder> orderCancellationDateRange = newRangeDate(orderCancellationDate);
    private RangeInteger<TdOrder> orderRefundTypeRange = newRangeInteger(orderRefundType);
    private RangeDate<TdOrder> orderRefundDateRange = newRangeDate(orderRefundDate);
    private RangeInteger<TdOrder> disputeRaisedStatusRange = newRangeInteger(disputeRaisedStatus);
    private RangeDate<TdOrder> disputeRaisedDateRange = newRangeDate(disputeRaisedDate);
    private RangeDate<TdOrder> orderLastUpdationDateRange = newRangeDate(orderLastUpdationDate);
    private RangeInteger<TdOrder> orderAcceptNewsletterRange = newRangeInteger(orderAcceptNewsletter);
    private RangeInteger<TdOrder> orderAcceptPromotionalMaterialRange = newRangeInteger(orderAcceptPromotionalMaterial);
    private RangeInteger<TdOrder> customint1Range = newRangeInteger(customint1);
    private RangeInteger<TdOrder> customint2Range = newRangeInteger(customint2);
    private RangeInteger<TdOrder> carYearRange = newRangeInteger(carYear);
    private TdCitySelector<TdOrder> billingCitySelector = newTdCitySelector(billingCityId);
    private TdCitySelector<TdOrder> shipmentCitySelector = newTdCitySelector(shipmentCityId);
    private TdStateSelector<TdOrder> shipmentStateSelector = newTdStateSelector(shipmentStateId);
    private TdUserAuthSelector<TdOrder> userSelector = newTdUserAuthSelector(userId);
    private TdProductSelector<TdOrder> productSelector = newTdProductSelector(productId);
    private TdCountrySelector<TdOrder> shipmentCountrySelector = newTdCountrySelector(shipmentCountryId);
    private TdCountrySelector<TdOrder> billingCountrySelector = newTdCountrySelector(billingCountryId);
    private TdUserAuthSelector<TdOrder> assignedToUserSelector = newTdUserAuthSelector(assignedToUserid);
    private TdStateSelector<TdOrder> billingStateSelector = newTdStateSelector(billingStateId);

    public TdOrder getTdOrder() {
        return tdOrder;
    }

    // Ranges, used from the view.
    public RangeInteger<TdOrder> getBillingIdRange() {
        return billingIdRange;
    }

    public RangeInteger<TdOrder> getInvoiceIdRange() {
        return invoiceIdRange;
    }

    public RangeInteger<TdOrder> getOrderTypeRange() {
        return orderTypeRange;
    }

    public RangeInteger<TdOrder> getOrderStatusRange() {
        return orderStatusRange;
    }

    public RangeInteger<TdOrder> getOrderActiveRange() {
        return orderActiveRange;
    }

    public RangeInteger<TdOrder> getOrderPriorityRange() {
        return orderPriorityRange;
    }

    public RangeInteger<TdOrder> getOrderCorporateTypeRange() {
        return orderCorporateTypeRange;
    }

    public RangeInteger<TdOrder> getOrderBulkTypeRange() {
        return orderBulkTypeRange;
    }

    public RangeInteger<TdOrder> getProductQuantityRange() {
        return productQuantityRange;
    }

    public RangeDate<TdOrder> getAssignedToUseridDateRange() {
        return assignedToUseridDateRange;
    }

    public RangeInteger<TdOrder> getBillingPhone1BlockedRange() {
        return billingPhone1BlockedRange;
    }

    public RangeInteger<TdOrder> getBillingPhone2BlockedRange() {
        return billingPhone2BlockedRange;
    }

    public RangeFloat<TdOrder> getBillingTotalAmountRange() {
        return billingTotalAmountRange;
    }

    public RangeFloat<TdOrder> getBillingAdvanceAmountRange() {
        return billingAdvanceAmountRange;
    }

    public RangeFloat<TdOrder> getBillingBalanceAmountRange() {
        return billingBalanceAmountRange;
    }

    public RangeFloat<TdOrder> getBillingMarginAmountRange() {
        return billingMarginAmountRange;
    }

    public RangeFloat<TdOrder> getBillingTaxrateRange() {
        return billingTaxrateRange;
    }

    public RangeFloat<TdOrder> getBillingPaymentGatewayRateRange() {
        return billingPaymentGatewayRateRange;
    }

    public RangeFloat<TdOrder> getShipmentRateRange() {
        return shipmentRateRange;
    }

    public RangeFloat<TdOrder> getBillingGrossAmountRange() {
        return billingGrossAmountRange;
    }

    public RangeFloat<TdOrder> getBillingNettCostRange() {
        return billingNettCostRange;
    }

    public RangeInteger<TdOrder> getCustPaymentModeRange() {
        return custPaymentModeRange;
    }

    public RangeInteger<TdOrder> getCustPaymentStatusRange() {
        return custPaymentStatusRange;
    }

    public RangeDate<TdOrder> getCustPaymentDateRange() {
        return custPaymentDateRange;
    }

    public RangeInteger<TdOrder> getVendorPaymentModeRange() {
        return vendorPaymentModeRange;
    }

    public RangeDate<TdOrder> getVendorPaymentDateRange() {
        return vendorPaymentDateRange;
    }

    public RangeInteger<TdOrder> getOrderOriginCountryIdRange() {
        return orderOriginCountryIdRange;
    }

    public RangeDate<TdOrder> getOrderCreationDateRange() {
        return orderCreationDateRange;
    }

    public RangeDate<TdOrder> getOrderFirstUpdationDateRange() {
        return orderFirstUpdationDateRange;
    }

    public RangeInteger<TdOrder> getOrderAvailabilityStatusRange() {
        return orderAvailabilityStatusRange;
    }

    public RangeDate<TdOrder> getOrderAvailabilityStatusUpdationDateRange() {
        return orderAvailabilityStatusUpdationDateRange;
    }

    public RangeDate<TdOrder> getDispatchDateRange() {
        return dispatchDateRange;
    }

    public RangeDate<TdOrder> getDeliveryDateRange() {
        return deliveryDateRange;
    }

    public RangeInteger<TdOrder> getDeliveryStatusRange() {
        return deliveryStatusRange;
    }

    public RangeInteger<TdOrder> getMailedReminderToVendorStatusRange() {
        return mailedReminderToVendorStatusRange;
    }

    public RangeDate<TdOrder> getMailedReminderToVendorDateRange() {
        return mailedReminderToVendorDateRange;
    }

    public RangeInteger<TdOrder> getOrderCancelRequestStatusRange() {
        return orderCancelRequestStatusRange;
    }

    public RangeDate<TdOrder> getOrderCancelRequestDateRange() {
        return orderCancelRequestDateRange;
    }

    public RangeInteger<TdOrder> getOrderCancellationToVendorStatusRange() {
        return orderCancellationToVendorStatusRange;
    }

    public RangeDate<TdOrder> getOrderCancellationToVendorDateRange() {
        return orderCancellationToVendorDateRange;
    }

    public RangeDate<TdOrder> getOrderConversionDateRange() {
        return orderConversionDateRange;
    }

    public RangeDate<TdOrder> getOrderConfirmationDateRange() {
        return orderConfirmationDateRange;
    }

    public RangeDate<TdOrder> getOrderReconfirmationDateRange() {
        return orderReconfirmationDateRange;
    }

    public RangeInteger<TdOrder> getOrderCancellationTypeRange() {
        return orderCancellationTypeRange;
    }

    public RangeDate<TdOrder> getOrderCancellationDateRange() {
        return orderCancellationDateRange;
    }

    public RangeInteger<TdOrder> getOrderRefundTypeRange() {
        return orderRefundTypeRange;
    }

    public RangeDate<TdOrder> getOrderRefundDateRange() {
        return orderRefundDateRange;
    }

    public RangeInteger<TdOrder> getDisputeRaisedStatusRange() {
        return disputeRaisedStatusRange;
    }

    public RangeDate<TdOrder> getDisputeRaisedDateRange() {
        return disputeRaisedDateRange;
    }

    public RangeDate<TdOrder> getOrderLastUpdationDateRange() {
        return orderLastUpdationDateRange;
    }

    public RangeInteger<TdOrder> getOrderAcceptNewsletterRange() {
        return orderAcceptNewsletterRange;
    }

    public RangeInteger<TdOrder> getOrderAcceptPromotionalMaterialRange() {
        return orderAcceptPromotionalMaterialRange;
    }

    public RangeInteger<TdOrder> getCustomint1Range() {
        return customint1Range;
    }

    public RangeInteger<TdOrder> getCustomint2Range() {
        return customint2Range;
    }

    public RangeInteger<TdOrder> getCarYearRange() {
        return carYearRange;
    }

    // Selectors for x-to-one associations
    public TdCitySelector<TdOrder> getBillingCitySelector() {
        return billingCitySelector;
    }

    public TdCitySelector<TdOrder> getShipmentCitySelector() {
        return shipmentCitySelector;
    }

    public TdStateSelector<TdOrder> getShipmentStateSelector() {
        return shipmentStateSelector;
    }

    public TdUserAuthSelector<TdOrder> getUserSelector() {
        return userSelector;
    }

    public TdProductSelector<TdOrder> getProductSelector() {
        return productSelector;
    }

    public TdCountrySelector<TdOrder> getShipmentCountrySelector() {
        return shipmentCountrySelector;
    }

    public TdCountrySelector<TdOrder> getBillingCountrySelector() {
        return billingCountrySelector;
    }

    public TdUserAuthSelector<TdOrder> getAssignedToUserSelector() {
        return assignedToUserSelector;
    }

    public TdStateSelector<TdOrder> getBillingStateSelector() {
        return billingStateSelector;
    }
}