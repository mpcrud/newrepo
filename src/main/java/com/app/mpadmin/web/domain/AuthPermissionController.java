/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/Controller.e.vm.java
 */
package com.app.mpadmin.web.domain;

import static com.app.mpadmin.web.util.PrimeFacesUtil.forceClose;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;

import com.app.mpadmin.domain.AuthPermission;
import com.app.mpadmin.repository.AuthPermissionRepository;
import com.app.mpadmin.web.converter.domain.AuthPermissionConverter;
import com.app.mpadmin.web.util.MessageUtil;

/**
 * Thin controller layer allowing you to do business validation and other conditional 
 * checks that are easier to implement in Java than in webflow's xml syntax.
 */
@Named
@Singleton
public class AuthPermissionController {
    private static final long serialVersionUID = 1L;

    @Inject
    private AuthPermissionRepository authPermissionRepository;

    @Inject
    private MessageUtil messageUtil;

    @Inject
    private AuthPermissionConverter authPermissionConverter;

    public AuthPermission newIfNull(AuthPermission authPermission) {
        if (authPermission != null) {
            return authPermission;
        }

        return authPermissionRepository.getNewWithDefaults();
    }

    public boolean save(AuthPermission authPermission) {
        authPermissionRepository.save(authPermission);
        messageUtil.info("status_saved_ok", authPermissionConverter.print(authPermission));
        return true;
    }

    public boolean saveAndClose(AuthPermission authPermission) {
        authPermissionRepository.save(authPermission);
        messageUtil.infoDelayed("status_saved_ok", authPermissionConverter.print(authPermission));
        forceClose();
        return true;
    }

    public boolean delete(AuthPermission authPermission) {
        String infoArg = authPermissionConverter.print(authPermission);
        authPermissionRepository.delete(authPermission);
        messageUtil.info("status_deleted_ok", infoArg);
        return true;
    }
}