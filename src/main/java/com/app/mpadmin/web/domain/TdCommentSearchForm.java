/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/SearchForm.e.vm.java
 */
package com.app.mpadmin.web.domain;

import static com.app.mpadmin.dao.support.Ranges.RangeDate.newRangeDate;
import static com.app.mpadmin.dao.support.Ranges.RangeInteger.newRangeInteger;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import com.app.mpadmin.dao.support.Ranges.RangeDate;
import com.app.mpadmin.dao.support.Ranges.RangeInteger;
import com.app.mpadmin.domain.TdComment;
import com.app.mpadmin.web.domain.support.SearchFormBase;
import static com.app.mpadmin.dao.support.EntitySelectors.TdTopicSelector.newTdTopicSelector;
import static com.app.mpadmin.dao.support.EntitySelectors.TdUserAuthSelector.newTdUserAuthSelector;
import static com.app.mpadmin.domain.TdComment_.*;

import com.app.mpadmin.dao.support.EntitySelectors.TdTopicSelector;
import com.app.mpadmin.dao.support.EntitySelectors.TdUserAuthSelector;
/**
 * Simple parameters holder for tdComment search.
 */
@Component
@Scope("request")
public class TdCommentSearchForm extends SearchFormBase {
    private static final long serialVersionUID = 1L;

    private TdComment tdComment = new TdComment();
    //private RangeInteger<TdComment> topicIdRange = newRangeInteger(topicId);
    private RangeInteger<TdComment> commentIdRange = RangeInteger.newRangeInteger(commentId);
    private RangeInteger<TdComment> commentCountRange = newRangeInteger(commentCount);
    //private RangeInteger<TdComment> userIdRange = newRangeInteger(userId);
    private RangeDate<TdComment> updationDateRange = newRangeDate(updationDate);
    private RangeInteger<TdComment> isActiveRange = newRangeInteger(isActive);
    private RangeInteger<TdComment> commentStatusRange = newRangeInteger(commentStatus);
    private TdUserAuthSelector<TdComment> userSelector = newTdUserAuthSelector(userId);
    private TdTopicSelector<TdComment> topicSelector = newTdTopicSelector(topicId);
    public TdComment getTdComment() {
        return tdComment;
    }

    // Ranges, used from the view.
   /* public RangeInteger<TdComment> getTopicIdRange() {
        return topicIdRange;
    }*/
    public RangeInteger<TdComment> getCommentIdRange(){
        return commentIdRange;
    }


    public RangeInteger<TdComment> getCommentCountRange() {
        return commentCountRange;
    }

   /* public RangeInteger<TdComment> getUserIdRange() {
        return userIdRange;
    }*/

    public RangeDate<TdComment> getUpdationDateRange() {
        return updationDateRange;
    }

    public RangeInteger<TdComment> getIsActiveRange() {
        return isActiveRange;
    }

    public RangeInteger<TdComment> getCommentStatusRange() {
        return commentStatusRange;
    }
    
 // Selectors for x-to-one associations
    public TdUserAuthSelector<TdComment> getUserSelector() {
        return userSelector;
    }

    public TdTopicSelector<TdComment> getTopicSelector() {
        return topicSelector;
    }
}