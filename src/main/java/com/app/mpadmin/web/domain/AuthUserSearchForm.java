/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/SearchForm.e.vm.java
 */
package com.app.mpadmin.web.domain;

import static com.app.mpadmin.dao.support.PropertySelectors.BooleanSelector.newBooleanSelector;
import static com.app.mpadmin.dao.support.Ranges.RangeDate.newRangeDate;
import static com.app.mpadmin.domain.AuthUser_.dateJoined;
import static com.app.mpadmin.domain.AuthUser_.isActive;
import static com.app.mpadmin.domain.AuthUser_.isStaff;
import static com.app.mpadmin.domain.AuthUser_.isSuperuser;
import static com.app.mpadmin.domain.AuthUser_.lastLogin;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import com.app.mpadmin.dao.support.PropertySelectors.BooleanSelector;
import com.app.mpadmin.dao.support.Ranges.RangeDate;
import com.app.mpadmin.domain.AuthUser;
import com.app.mpadmin.web.domain.support.SearchFormBase;

/**
 * Simple parameters holder for authUser search.
 */
@Component
@Scope("session")
public class AuthUserSearchForm extends SearchFormBase {
    private static final long serialVersionUID = 1L;

    private AuthUser authUser = new AuthUser();
    private RangeDate<AuthUser> lastLoginRange = newRangeDate(lastLogin);
    private RangeDate<AuthUser> dateJoinedRange = newRangeDate(dateJoined);
    private BooleanSelector<AuthUser> isStaffSelector = newBooleanSelector(isStaff);
    private BooleanSelector<AuthUser> isActiveSelector = newBooleanSelector(isActive);
    private BooleanSelector<AuthUser> isSuperuserSelector = newBooleanSelector(isSuperuser);

    public AuthUser getAuthUser() {
        return authUser;
    }

    // Ranges, used from the view.
    public RangeDate<AuthUser> getLastLoginRange() {
        return lastLoginRange;
    }

    public RangeDate<AuthUser> getDateJoinedRange() {
        return dateJoinedRange;
    }

    // Selectors for property
    public BooleanSelector<AuthUser> getIsStaffSelector() {
        return isStaffSelector;
    }

    public BooleanSelector<AuthUser> getIsActiveSelector() {
        return isActiveSelector;
    }

    public BooleanSelector<AuthUser> getIsSuperuserSelector() {
        return isSuperuserSelector;
    }
}