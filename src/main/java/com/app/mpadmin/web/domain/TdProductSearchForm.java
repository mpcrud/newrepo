/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/SearchForm.e.vm.java
 */
package com.app.mpadmin.web.domain;

import static com.app.mpadmin.dao.support.EntitySelectors.TdProductShipmentSelector.newTdProductShipmentSelector;
import static com.app.mpadmin.dao.support.EntitySelectors.TdProductSupplierSelector.newTdProductSupplierSelector;
import static com.app.mpadmin.dao.support.PropertySelectors.BooleanSelector.newBooleanSelector;
import static com.app.mpadmin.dao.support.Ranges.RangeDate.newRangeDate;
import static com.app.mpadmin.dao.support.Ranges.RangeFloat.newRangeFloat;
import static com.app.mpadmin.dao.support.Ranges.RangeInteger.newRangeInteger;
import static com.app.mpadmin.domain.TdProduct_.*;

import com.app.mpadmin.domain.TdProductBrand;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.app.mpadmin.dao.support.EntitySelectors.TdProductShipmentSelector;
import com.app.mpadmin.dao.support.EntitySelectors.TdProductSupplierSelector;
import com.app.mpadmin.dao.support.PropertySelectors.BooleanSelector;
import com.app.mpadmin.dao.support.Ranges.RangeDate;
import com.app.mpadmin.dao.support.Ranges.RangeFloat;
import com.app.mpadmin.dao.support.Ranges.RangeInteger;
import com.app.mpadmin.domain.TdProduct;
import com.app.mpadmin.web.domain.support.SearchFormBase;

/**
 * Simple parameters holder for tdProduct search.
 */
@Component
@Scope("request")
public class TdProductSearchForm extends SearchFormBase {
    private static final long serialVersionUID = 1L;

    private TdProduct tdProduct = new TdProduct();
    //private RangeInteger<TdProduct> productSupplierIdRange = newRangeInteger(productSupplierId);
   // private RangeInteger<TdProduct> productShipmentIdRange = newRangeInteger(productShipmentId);
    private RangeInteger<TdProduct> productAgeTimeRange = newRangeInteger(productAgeTime);
    private RangeInteger<TdProduct> productAgeDistanceRange = newRangeInteger(productAgeDistance);
    private RangeInteger<TdProduct> innerDia1Range = newRangeInteger(innerDia1);
    private RangeInteger<TdProduct> innerDia2Range = newRangeInteger(innerDia2);
    private RangeInteger<TdProduct> outerDia1Range = newRangeInteger(outerDia1);
    private RangeInteger<TdProduct> outerDia2Range = newRangeInteger(outerDia2);
    private RangeInteger<TdProduct> height1Range = newRangeInteger(height1);
    private RangeInteger<TdProduct> height2Range = newRangeInteger(height2);
    private RangeInteger<TdProduct> width1Range = newRangeInteger(width1);
    private RangeInteger<TdProduct> width2Range = newRangeInteger(width2);
    private RangeInteger<TdProduct> thickness1Range = newRangeInteger(thickness1);
    private RangeInteger<TdProduct> thickness2Range = newRangeInteger(thickness2);
    private RangeInteger<TdProduct> noOfOuterThread1Range = newRangeInteger(noOfOuterThread1);
    private RangeInteger<TdProduct> noOfOuterThread2Range = newRangeInteger(noOfOuterThread2);
    private RangeInteger<TdProduct> noOfHoles1Range = newRangeInteger(noOfHoles1);
    private RangeInteger<TdProduct> noOfHoles2Range = newRangeInteger(noOfHoles2);
    private RangeInteger<TdProduct> noOfTeeth1Range = newRangeInteger(noOfTeeth1);
    private RangeInteger<TdProduct> noOfTeeth2Range = newRangeInteger(noOfTeeth2);
    private RangeInteger<TdProduct> plateDiameterRange = newRangeInteger(plateDiameter);
    private RangeInteger<TdProduct> quantityOfFitRange = newRangeInteger(quantityOfFit);
    private RangeInteger<TdProduct> requiredQuantityRange = newRangeInteger(requiredQuantity);
    private RangeFloat<TdProduct> mrpPriceRange = newRangeFloat(mrpPrice);
    private RangeFloat<TdProduct> discountRange = newRangeFloat(discount);
    private RangeFloat<TdProduct> dealerPriceRange = newRangeFloat(dealerPrice);
    private RangeInteger<TdProduct> internalRatingRange = newRangeInteger(internalRating);
    private RangeInteger<TdProduct> productSegmentTypeRange = newRangeInteger(productSegmentType);
    private RangeInteger<TdProduct> deliveryTypeRange = newRangeInteger(deliveryType);
    private RangeInteger<TdProduct> customint1Range = newRangeInteger(customint1);
    private RangeInteger<TdProduct> customint2Range = newRangeInteger(customint2);
    private RangeInteger<TdProduct> customint3Range = newRangeInteger(customint3);
    private RangeDate<TdProduct> updationDateRange = newRangeDate(updationDate);
    private BooleanSelector<TdProduct> recommendedProductSelector = newBooleanSelector(recommendedProduct);
    private BooleanSelector<TdProduct> bestSellerSelector = newBooleanSelector(bestSeller);
    private BooleanSelector<TdProduct> bookableOnlineSelector = newBooleanSelector(bookableOnline);
    private BooleanSelector<TdProduct> bookableOfflineSelector = newBooleanSelector(bookableOffline);
    private BooleanSelector<TdProduct> uniformAcrossYearSelector = newBooleanSelector(uniformAcrossYear);
    private BooleanSelector<TdProduct> uniformAcrossSubmodelSelector = newBooleanSelector(uniformAcrossSubmodel);
    private BooleanSelector<TdProduct> uniformAcrossModelSelector = newBooleanSelector(uniformAcrossModel);
    private BooleanSelector<TdProduct> uniformAcrossMakeSelector = newBooleanSelector(uniformAcrossMake);
    private BooleanSelector<TdProduct> productStatusSelector = newBooleanSelector(productStatus);
    private TdProductShipmentSelector<TdProduct> productShipmentSelector = newTdProductShipmentSelector(productShipmentId);
    private TdProductSupplierSelector<TdProduct> productSupplierSelector = newTdProductSupplierSelector(productSupplierId);
    private RangeInteger<TdProduct> productIdRange = newRangeInteger(productId);

    public TdProduct getTdProduct() {
        return tdProduct;
    }

    // Ranges, used from the view.
 /*   public RangeInteger<TdProduct> getProductSupplierIdRange() {
        return productSupplierIdRange;
    }

    public RangeInteger<TdProduct> getProductShipmentIdRange() {
        return productShipmentIdRange;
    }*/
    public RangeInteger<TdProduct> getProductIdRange(){
        return productIdRange;
    }

    public RangeInteger<TdProduct> getProductAgeTimeRange() {
        return productAgeTimeRange;
    }

    public RangeInteger<TdProduct> getProductAgeDistanceRange() {
        return productAgeDistanceRange;
    }

    public RangeInteger<TdProduct> getInnerDia1Range() {
        return innerDia1Range;
    }

    public RangeInteger<TdProduct> getInnerDia2Range() {
        return innerDia2Range;
    }

    public RangeInteger<TdProduct> getOuterDia1Range() {
        return outerDia1Range;
    }

    public RangeInteger<TdProduct> getOuterDia2Range() {
        return outerDia2Range;
    }

    public RangeInteger<TdProduct> getHeight1Range() {
        return height1Range;
    }

    public RangeInteger<TdProduct> getHeight2Range() {
        return height2Range;
    }

    public RangeInteger<TdProduct> getWidth1Range() {
        return width1Range;
    }

    public RangeInteger<TdProduct> getWidth2Range() {
        return width2Range;
    }

    public RangeInteger<TdProduct> getThickness1Range() {
        return thickness1Range;
    }

    public RangeInteger<TdProduct> getThickness2Range() {
        return thickness2Range;
    }

    public RangeInteger<TdProduct> getNoOfOuterThread1Range() {
        return noOfOuterThread1Range;
    }

    public RangeInteger<TdProduct> getNoOfOuterThread2Range() {
        return noOfOuterThread2Range;
    }

    public RangeInteger<TdProduct> getNoOfHoles1Range() {
        return noOfHoles1Range;
    }

    public RangeInteger<TdProduct> getNoOfHoles2Range() {
        return noOfHoles2Range;
    }

    public RangeInteger<TdProduct> getNoOfTeeth1Range() {
        return noOfTeeth1Range;
    }

    public RangeInteger<TdProduct> getNoOfTeeth2Range() {
        return noOfTeeth2Range;
    }

    public RangeInteger<TdProduct> getPlateDiameterRange() {
        return plateDiameterRange;
    }

    public RangeInteger<TdProduct> getQuantityOfFitRange() {
        return quantityOfFitRange;
    }

    public RangeInteger<TdProduct> getRequiredQuantityRange() {
        return requiredQuantityRange;
    }

    public RangeFloat<TdProduct> getMrpPriceRange() {
        return mrpPriceRange;
    }

    public RangeFloat<TdProduct> getDiscountRange() {
        return discountRange;
    }

    public RangeFloat<TdProduct> getDealerPriceRange() {
        return dealerPriceRange;
    }

    public RangeInteger<TdProduct> getInternalRatingRange() {
        return internalRatingRange;
    }

    public RangeInteger<TdProduct> getProductSegmentTypeRange() {
        return productSegmentTypeRange;
    }

    public RangeInteger<TdProduct> getDeliveryTypeRange() {
        return deliveryTypeRange;
    }

    public RangeInteger<TdProduct> getCustomint1Range() {
        return customint1Range;
    }

    public RangeInteger<TdProduct> getCustomint2Range() {
        return customint2Range;
    }

    public RangeInteger<TdProduct> getCustomint3Range() {
        return customint3Range;
    }

    public RangeDate<TdProduct> getUpdationDateRange() {
        return updationDateRange;
    }

    // Selectors for property
    public BooleanSelector<TdProduct> getRecommendedProductSelector() {
        return recommendedProductSelector;
    }

    public BooleanSelector<TdProduct> getBestSellerSelector() {
        return bestSellerSelector;
    }

    public BooleanSelector<TdProduct> getBookableOnlineSelector() {
        return bookableOnlineSelector;
    }

    public BooleanSelector<TdProduct> getBookableOfflineSelector() {
        return bookableOfflineSelector;
    }

    public BooleanSelector<TdProduct> getUniformAcrossYearSelector() {
        return uniformAcrossYearSelector;
    }

    public BooleanSelector<TdProduct> getUniformAcrossSubmodelSelector() {
        return uniformAcrossSubmodelSelector;
    }

    public BooleanSelector<TdProduct> getUniformAcrossModelSelector() {
        return uniformAcrossModelSelector;
    }

    public BooleanSelector<TdProduct> getUniformAcrossMakeSelector() {
        return uniformAcrossMakeSelector;
    }

    public BooleanSelector<TdProduct> getProductStatusSelector() {
        return productStatusSelector;
    }
    
 // Selectors for x-to-one associations
    public TdProductShipmentSelector<TdProduct> getProductShipmentSelector() {
        return productShipmentSelector;
    }

    public TdProductSupplierSelector<TdProduct> getProductSupplierSelector() {
        return productSupplierSelector;
    }
}