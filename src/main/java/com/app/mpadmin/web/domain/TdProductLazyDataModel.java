/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/LazyDataModel.e.vm.java
 */
package com.app.mpadmin.web.domain;

import java.util.List;
import java.util.Map;
import javax.inject.Inject;

import org.primefaces.model.SortOrder;

import com.app.mpadmin.dao.support.SearchParameters;
import com.app.mpadmin.domain.TdProduct;
import com.app.mpadmin.repository.TdProductRepository;
import com.app.mpadmin.web.domain.support.GenericLazyDataModel;

/**
 * Provides server-side pagination for search.
 *
 * @see http://jira.springframework.org/browse/SWF-1224 to avoid instanciate it as a var from your flow 
 */
public class TdProductLazyDataModel extends GenericLazyDataModel<TdProduct> {
    private static final long serialVersionUID = 1L;

    @Inject
    transient private TdProductRepository tdProductRepository;
    @Inject
    transient private TdProductSearchForm tdProductSearchForm;

    List<TdProduct> datasource;

    @Override
    public TdProduct getRowData(String rowKey) {
        for(TdProduct tdProduct : datasource) {
            if(tdProduct.getProductId().equals(rowKey))
                return tdProduct;
        }

        return null;
    }

    @Override
    public Object getRowKey(TdProduct tdProduct)
    {
         return tdProduct.getProductId();
    }


    /**
     * Prepare the search parameters and call the tdProductRepository finder.
     * Automatically called by PrimeFaces component.
     */
    @Override
    public List<TdProduct> load(int first, int pageSize, String sortField, SortOrder sortOrder, Map<String, String> filters) {
        SearchParameters sp = tdProductSearchForm.getSearchParameters();

        // ranges
        sp.clearRanges();
        //sp.addRange(tdProductSearchForm.getProductSupplierIdRange());
        //sp.addRange(tdProductSearchForm.getProductShipmentIdRange());
        sp.addRange(tdProductSearchForm.getProductAgeTimeRange());
        sp.addRange(tdProductSearchForm.getProductAgeDistanceRange());
        sp.addRange(tdProductSearchForm.getInnerDia1Range());
        sp.addRange(tdProductSearchForm.getInnerDia2Range());
        sp.addRange(tdProductSearchForm.getOuterDia1Range());
        sp.addRange(tdProductSearchForm.getOuterDia2Range());
        sp.addRange(tdProductSearchForm.getHeight1Range());
        sp.addRange(tdProductSearchForm.getHeight2Range());
        sp.addRange(tdProductSearchForm.getWidth1Range());
        sp.addRange(tdProductSearchForm.getWidth2Range());
        sp.addRange(tdProductSearchForm.getThickness1Range());
        sp.addRange(tdProductSearchForm.getThickness2Range());
        sp.addRange(tdProductSearchForm.getNoOfOuterThread1Range());
        sp.addRange(tdProductSearchForm.getNoOfOuterThread2Range());
        sp.addRange(tdProductSearchForm.getNoOfHoles1Range());
        sp.addRange(tdProductSearchForm.getNoOfHoles2Range());
        sp.addRange(tdProductSearchForm.getNoOfTeeth1Range());
        sp.addRange(tdProductSearchForm.getNoOfTeeth2Range());
        sp.addRange(tdProductSearchForm.getPlateDiameterRange());
        sp.addRange(tdProductSearchForm.getQuantityOfFitRange());
        sp.addRange(tdProductSearchForm.getRequiredQuantityRange());
        sp.addRange(tdProductSearchForm.getMrpPriceRange());
        sp.addRange(tdProductSearchForm.getDiscountRange());
        sp.addRange(tdProductSearchForm.getDealerPriceRange());
        sp.addRange(tdProductSearchForm.getInternalRatingRange());
        sp.addRange(tdProductSearchForm.getProductSegmentTypeRange());
        sp.addRange(tdProductSearchForm.getDeliveryTypeRange());
        sp.addRange(tdProductSearchForm.getCustomint1Range());
        sp.addRange(tdProductSearchForm.getCustomint2Range());
        sp.addRange(tdProductSearchForm.getCustomint3Range());
        sp.addRange(tdProductSearchForm.getUpdationDateRange());
        sp.addRange(tdProductSearchForm.getProductIdRange());
        // property selectors
        sp.clearPropertySelectors();
        sp.addPropertySelector(tdProductSearchForm.getRecommendedProductSelector());
        sp.addPropertySelector(tdProductSearchForm.getBestSellerSelector());
        sp.addPropertySelector(tdProductSearchForm.getBookableOnlineSelector());
        sp.addPropertySelector(tdProductSearchForm.getBookableOfflineSelector());
        sp.addPropertySelector(tdProductSearchForm.getUniformAcrossYearSelector());
        sp.addPropertySelector(tdProductSearchForm.getUniformAcrossSubmodelSelector());
        sp.addPropertySelector(tdProductSearchForm.getUniformAcrossModelSelector());
        sp.addPropertySelector(tdProductSearchForm.getUniformAcrossMakeSelector());
        sp.addPropertySelector(tdProductSearchForm.getProductStatusSelector());
        
     // entity selectors
        sp.clearEntitySelectors();
        sp.addEntitySelector(tdProductSearchForm.getProductShipmentSelector());
        sp.addEntitySelector(tdProductSearchForm.getProductSupplierSelector());

        TdProduct tdProduct = tdProductSearchForm.getTdProduct();
        setRowCount(tdProductRepository.findCount(tdProduct, sp)); // total count so the paginator may display the total number of pages
        populateSearchParameters(sp, first, pageSize, sortField, sortOrder, filters); // load one page of data
        datasource = tdProductRepository.find(tdProduct, sp);
        return datasource;
    }

  }