/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-primefaces:src/main/java/domain/LazyDataModel.e.vm.java
 */
package com.app.mpadmin.web.domain;

import java.util.List;
import java.util.Map;
import javax.inject.Inject;

import org.primefaces.model.SortOrder;

import com.app.mpadmin.dao.support.SearchParameters;
import com.app.mpadmin.domain.TdVote;
import com.app.mpadmin.repository.TdVoteRepository;
import com.app.mpadmin.web.domain.support.GenericLazyDataModel;

/**
 * Provides server-side pagination for search.
 *
 * @see http://jira.springframework.org/browse/SWF-1224 to avoid instanciate it as a var from your flow 
 */
public class TdVoteLazyDataModel extends GenericLazyDataModel<TdVote> {
    private static final long serialVersionUID = 1L;

    @Inject
    transient private TdVoteRepository tdVoteRepository;
    @Inject
    transient private TdVoteSearchForm tdVoteSearchForm;

List<TdVote> datasource;

    @Override
    public TdVote getRowData(String rowKey) {
        for(TdVote tdVote : datasource) {
            if(tdVote.getVoteId().equals(rowKey))
                return tdVote;
        }

        return null;
    }

    @Override
    public Object getRowKey(TdVote tdVote)
    {
         return tdVote.getVoteId();
    }


    /**
     * Prepare the search parameters and call the tdVoteRepository finder.
     * Automatically called by PrimeFaces component.
     */
    @Override
    public List<TdVote> load(int first, int pageSize, String sortField, SortOrder sortOrder, Map<String, String> filters) {
        SearchParameters sp = tdVoteSearchForm.getSearchParameters();

        // ranges
        sp.clearRanges();
        sp.addRange(tdVoteSearchForm.getVoteTypeRange());
        sp.addRange(tdVoteSearchForm.getUpdationDateRange());
        sp.addRange(tdVoteSearchForm.getIsActiveRange());
        sp.addRange(tdVoteSearchForm.getVoteStatusRange());
        sp.addRange(tdVoteSearchForm.getCommentIdRange());

        // entity selectors
        sp.clearEntitySelectors();
        sp.addEntitySelector(tdVoteSearchForm.getUserSelector());
        sp.addEntitySelector(tdVoteSearchForm.getTopicSelector());

        TdVote tdVote = tdVoteSearchForm.getTdVote();
        setRowCount(tdVoteRepository.findCount(tdVote, sp)); // total count so the paginator may display the total number of pages
        populateSearchParameters(sp, first, pageSize, sortField, sortOrder, filters); // load one page of data
        datasource = tdVoteRepository.find(tdVote, sp);
        return datasource;
    }
}