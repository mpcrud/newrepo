/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.app.mpadmin.domain;

import java.io.*;
import java.util.*;

import static org.junit.Assert.*;
import org.junit.Test;

import com.app.mpadmin.util.*;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import com.app.mpadmin.domain.TdShipmentVendor;

/**
 * Basic tests for TdProductShipment
 */
@SuppressWarnings("unused")
public class TdProductShipmentTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        TdProductShipment model = new TdProductShipment();
        assertFalse(model.isIdSet());
    }

    @Test
    public void isIdSetReturnsTrue() {
        TdProductShipment model = new TdProductShipment();
        model.setProductShipmentId(ValueGenerator.getUniqueInteger());
        assertNotNull(model.getProductShipmentId());
        assertTrue(model.isIdSet());
    }

    // test columns methods

    //-------------------------------------------------------------
    // Many to One:  TdProductShipment.shipmentVendorId ==> TdShipmentVendor.shipmentVendorId
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setShipmentVendor() {
        TdProductShipment many = new TdProductShipment();

        // init
        TdShipmentVendor one = new TdShipmentVendor();

        one.setShipmentVendorId(ValueGenerator.getUniqueInteger());
        many.setShipmentVendor(one);

        // make sure it is propagated properly
        assertNotNull(many.getShipmentVendorId());
        assertEquals(one, many.getShipmentVendor());
        assertSame(many.getShipmentVendorId(), one.getShipmentVendorId());
        // now set it to back to null
        many.setShipmentVendor(null);

        // make sure null is propagated properly
        assertNull(many.getShipmentVendor());

        // make sure it is propagated on fk column as well
        assertNull(many.getShipmentVendorId());
    }

    @Test
    public void toStringNotNull() {
        TdProductShipment model = new TdProductShipment();
        assertNotNull(model.toString());
    }

    @Test
    public void equalsUsingPk() {
        TdProductShipment model1 = new TdProductShipment();
        TdProductShipment model2 = new TdProductShipment();

        Integer productShipmentId = ValueGenerator.getUniqueInteger();
        model1.setProductShipmentId(productShipmentId);
        model2.setProductShipmentId(productShipmentId);

        model1.setShipmentMrpCost(1f);
        model2.setShipmentMrpCost(1f);

        model1.setShipmentDiscount(1f);
        model2.setShipmentDiscount(1f);

        model1.setShipmentPolicy("a");
        model2.setShipmentPolicy("a");

        model1.setShipmentSpecialNote("a");
        model2.setShipmentSpecialNote("a");

        model1.setShipmentDuration(1);
        model2.setShipmentDuration(1);

        model1.setShipmentType(1);
        model2.setShipmentType(1);

        model1.setShipmentStatus(true);
        model2.setShipmentStatus(true);

        model1.setCustom1("a");
        model2.setCustom1("a");

        model1.setCustom2("a");
        model2.setCustom2("a");

        model1.setCreationDate(new Date());
        model2.setCreationDate(new Date());

        model1.setUpdationDate(new Date());
        model2.setUpdationDate(new Date());
        assertTrue(model1.isIdSet());
        assertTrue(model2.isIdSet());
        assertTrue(model1.hashCode() == model2.hashCode());
        assertTrue(model1.equals(model2));
        assertTrue(model2.equals(model1));
    }
}