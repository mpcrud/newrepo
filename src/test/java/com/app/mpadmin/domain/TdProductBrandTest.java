/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.app.mpadmin.domain;

import java.io.*;
import java.util.*;

import static org.junit.Assert.*;
import org.junit.Test;

import com.app.mpadmin.util.*;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.URL;

/**
 * Basic tests for TdProductBrand
 */
@SuppressWarnings("unused")
public class TdProductBrandTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        TdProductBrand model = new TdProductBrand();
        assertFalse(model.isIdSet());
    }

    @Test
    public void isIdSetReturnsTrue() {
        TdProductBrand model = new TdProductBrand();
        model.setProductBrandId(ValueGenerator.getUniqueInteger());
        assertNotNull(model.getProductBrandId());
        assertTrue(model.isIdSet());
    }

    // test columns methods

    @Test
    public void toStringNotNull() {
        TdProductBrand model = new TdProductBrand();
        assertNotNull(model.toString());
    }

    @Test
    public void equalsUsingBusinessKey() {
        TdProductBrand model1 = new TdProductBrand();
        TdProductBrand model2 = new TdProductBrand();
        String seoUrl = ValueGenerator.getUniqueString(255);
        model1.setSeoUrl(seoUrl);
        model2.setSeoUrl(seoUrl);
        assertTrue(model1.equals(model2));
        assertTrue(model2.equals(model1));
        assertTrue(model1.hashCode() == model2.hashCode());
    }
}