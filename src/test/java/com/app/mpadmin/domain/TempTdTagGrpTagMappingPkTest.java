/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/domain/CompositePkTest.cpk.vm.java
 */
package com.app.mpadmin.domain;

import static org.junit.Assert.*;
import org.junit.Test;

import java.io.Serializable;
import com.app.mpadmin.util.ValueGenerator;

/**
 * Basic tests for TempTdTagGrpTagMappingPk
 */
@SuppressWarnings("unused")
public class TempTdTagGrpTagMappingPkTest {

    @Test
    public void compositePrimaryKeytagGrpId_test1() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        assertFalse(cpk.isTagGrpIdSet());
        assertNull(cpk.getTagGrpId());
        assertTrue(cpk.isEmpty());
    }

    @Test
    public void compositePrimaryKeytagGrpId_test2() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        cpk.setTagGrpId(ValueGenerator.getUniqueInteger());

        assertTrue(cpk.isTagGrpIdSet());
        assertNotNull(cpk.getTagGrpId());
        assertFalse(cpk.isEmpty());
    }

    @Test
    public void compositePrimaryKeytagId_test1() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        assertFalse(cpk.isTagIdSet());
        assertNull(cpk.getTagId());
        assertTrue(cpk.isEmpty());
    }

    @Test
    public void compositePrimaryKeytagId_test2() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        cpk.setTagId(ValueGenerator.getUniqueInteger());

        assertTrue(cpk.isTagIdSet());
        assertNotNull(cpk.getTagId());
        assertFalse(cpk.isEmpty());
    }

    @Test
    public void isEmptyTrue() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        assertTrue(cpk.isEmpty());
    }

    @Test
    public void isEmptyFalse() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        cpk.setTagGrpId(ValueGenerator.getUniqueInteger());
        cpk.setTagId(ValueGenerator.getUniqueInteger());
        assertFalse(cpk.isEmpty());
    }

    @Test
    public void toStringNotNullWhenNew() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        assertNotNull(cpk.toString());
    }

    @Test
    public void toStringHasLength() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        cpk.setTagGrpId(ValueGenerator.getUniqueInteger());
        cpk.setTagId(ValueGenerator.getUniqueInteger());
        assertNotNull(cpk.toString());
        assertFalse(cpk.toString().isEmpty());
    }

    @Test
    public void equality_test1() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        assertEquals(cpk, cpk);
        assertEquals(cpk.hashCode(), cpk.hashCode());
        assertEquals(0, cpk.compareTo(cpk));
    }

    @Test
    public void equality_test2() {
        TempTdTagGrpTagMappingPk cpk = new TempTdTagGrpTagMappingPk();
        assertFalse(cpk.equals(null));
        assertEquals(-1, cpk.compareTo(null));
    }

    @Test
    public void equality_test3() {
        TempTdTagGrpTagMappingPk cpk1 = new TempTdTagGrpTagMappingPk();
        TempTdTagGrpTagMappingPk cpk2 = new TempTdTagGrpTagMappingPk();

        Integer tagGrpId = ValueGenerator.getUniqueInteger();
        cpk1.setTagGrpId(tagGrpId);
        cpk2.setTagGrpId(tagGrpId);

        Integer tagId = ValueGenerator.getUniqueInteger();
        cpk1.setTagId(tagId);
        cpk2.setTagId(tagId);

        assertTrue(cpk1.hashCode() == cpk2.hashCode());
        assertTrue(cpk1.equals(cpk2));
        assertTrue(cpk2.equals(cpk1));
        assertEquals(0, cpk1.compareTo(cpk2));
        assertEquals(0, cpk2.compareTo(cpk1));
    }
}