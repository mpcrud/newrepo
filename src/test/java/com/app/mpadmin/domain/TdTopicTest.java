/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.app.mpadmin.domain;

import java.io.*;
import java.util.*;

import static org.junit.Assert.*;
import org.junit.Test;

import com.app.mpadmin.util.*;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.URL;
import com.app.mpadmin.domain.TdUserAuth;

/**
 * Basic tests for TdTopic
 */
@SuppressWarnings("unused")
public class TdTopicTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        TdTopic model = new TdTopic();
        assertFalse(model.isIdSet());
    }

    @Test
    public void isIdSetReturnsTrue() {
        TdTopic model = new TdTopic();
        model.setTopicId(ValueGenerator.getUniqueInteger());
        assertNotNull(model.getTopicId());
        assertTrue(model.isIdSet());
    }

    // test columns methods

    //-------------------------------------------------------------
    // Many to One:  TdTopic.userId ==> TdUserAuth.userId
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setUser() {
        TdTopic many = new TdTopic();

        // init
        TdUserAuth one = new TdUserAuth();

        one.setUserId(ValueGenerator.getUniqueInteger());
        many.setUser(one);

        // make sure it is propagated properly
        assertNotNull(many.getUserId());
        assertEquals(one, many.getUser());
        assertSame(many.getUserId(), one.getUserId());
        // now set it to back to null
        many.setUser(null);

        // make sure null is propagated properly
        assertNull(many.getUser());

        // make sure it is propagated on fk column as well
        assertNull(many.getUserId());
    }

    @Test
    public void toStringNotNull() {
        TdTopic model = new TdTopic();
        assertNotNull(model.toString());
    }

    @Test
    public void equalsUsingPk() {
        TdTopic model1 = new TdTopic();
        TdTopic model2 = new TdTopic();

        Integer topicId = ValueGenerator.getUniqueInteger();
        model1.setTopicId(topicId);
        model2.setTopicId(topicId);

        model1.setTopicTitle("a");
        model2.setTopicTitle("a");

        model1.setViewCount(1);
        model2.setViewCount(1);

        model1.setCommentCount(1);
        model2.setCommentCount(1);

        model1.setAssignedSince(new Date());
        model2.setAssignedSince(new Date());

        model1.setDescShort("a");
        model2.setDescShort("a");

        model1.setDescLong("a");
        model2.setDescLong("a");

        model1.setParentTopicId(1);
        model2.setParentTopicId(1);

        model1.setTwitterCount(1);
        model2.setTwitterCount(1);

        model1.setFacebookCount(1);
        model2.setFacebookCount(1);

        model1.setMetaDesc("a");
        model2.setMetaDesc("a");

        model1.setCreationDate(new Date());
        model2.setCreationDate(new Date());

        model1.setUpdationDate(new Date());
        model2.setUpdationDate(new Date());

        model1.setIsActive(1);
        model2.setIsActive(1);

        model1.setIsFeatured(1);
        model2.setIsFeatured(1);

        model1.setAssignedToUser(1);
        model2.setAssignedToUser(1);

        model1.setExpiryDate(new Date());
        model2.setExpiryDate(new Date());

        model1.setTopicStatus(1);
        model2.setTopicStatus(1);

        model1.setVoteCount(1);
        model2.setVoteCount(1);

        model1.setCustomInt1(1);
        model2.setCustomInt1(1);

        model1.setCustomInt2(1);
        model2.setCustomInt2(1);

        model1.setCustomVarchar1("a");
        model2.setCustomVarchar1("a");

        model1.setCustomVarchar2("a");
        model2.setCustomVarchar2("a");

        model1.setSeoResources("a");
        model2.setSeoResources("a");

        model1.setMetaTitle("a");
        model2.setMetaTitle("a");

        model1.setMetaKeyword("a");
        model2.setMetaKeyword("a");

        model1.setSeoUrl("http://www.jaxio.com");
        model2.setSeoUrl("http://www.jaxio.com");

        model1.setH1("a");
        model2.setH1("a");

        model1.setH2("a");
        model2.setH2("a");
        assertTrue(model1.isIdSet());
        assertTrue(model2.isIdSet());
        assertTrue(model1.hashCode() == model2.hashCode());
        assertTrue(model1.equals(model2));
        assertTrue(model2.equals(model1));
    }
}