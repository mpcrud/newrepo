/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.app.mpadmin.domain;

import java.io.*;
import java.util.*;

import static org.junit.Assert.*;
import org.junit.Test;

import com.app.mpadmin.util.*;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.Email;

/**
 * Basic tests for TdRequestCarPart
 */
@SuppressWarnings("unused")
public class TdRequestCarPartTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        TdRequestCarPart model = new TdRequestCarPart();
        assertFalse(model.isIdSet());
    }

    @Test
    public void isIdSetReturnsTrue() {
        TdRequestCarPart model = new TdRequestCarPart();
        model.setRequestId(ValueGenerator.getUniqueInteger());
        assertNotNull(model.getRequestId());
        assertTrue(model.isIdSet());
    }

    // test columns methods

    @Test
    public void toStringNotNull() {
        TdRequestCarPart model = new TdRequestCarPart();
        assertNotNull(model.toString());
    }

    @Test
    public void equalsUsingPk() {
        TdRequestCarPart model1 = new TdRequestCarPart();
        TdRequestCarPart model2 = new TdRequestCarPart();

        Integer requestId = ValueGenerator.getUniqueInteger();
        model1.setRequestId(requestId);
        model2.setRequestId(requestId);

        model1.setRequestSource("a");
        model2.setRequestSource("a");

        model1.setCreationDate(new Date());
        model2.setCreationDate(new Date());

        model1.setLastUpdateDate(new Date());
        model2.setLastUpdateDate(new Date());

        model1.setCarMake("a");
        model2.setCarMake("a");

        model1.setCarModel("a");
        model2.setCarModel("a");

        model1.setCarYear(1);
        model2.setCarYear(1);

        model1.setFuelType("a");
        model2.setFuelType("a");

        model1.setProductName("a");
        model2.setProductName("a");

        model1.setBillingFirstname("a");
        model2.setBillingFirstname("a");

        model1.setBillingLastname("a");
        model2.setBillingLastname("a");

        model1.setBillingEmail("dummy@dummy.com");
        model2.setBillingEmail("dummy@dummy.com");

        model1.setBillingPhone("a");
        model2.setBillingPhone("a");

        model1.setBillingAddressline1("a");
        model2.setBillingAddressline1("a");

        model1.setBillingAddressline2("a");
        model2.setBillingAddressline2("a");

        model1.setBillingCityId("a");
        model2.setBillingCityId("a");

        model1.setBillingStateId("a");
        model2.setBillingStateId("a");

        model1.setBillingCountryId("a");
        model2.setBillingCountryId("a");

        model1.setBillingZip("a");
        model2.setBillingZip("a");

        model1.setRequestStatus(1);
        model2.setRequestStatus(1);

        model1.setRequestComments("a");
        model2.setRequestComments("a");
        assertTrue(model1.isIdSet());
        assertTrue(model2.isIdSet());
        assertTrue(model1.hashCode() == model2.hashCode());
        assertTrue(model1.equals(model2));
        assertTrue(model2.equals(model1));
    }
}