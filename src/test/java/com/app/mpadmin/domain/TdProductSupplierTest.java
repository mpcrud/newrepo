/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.app.mpadmin.domain;

import java.io.*;
import java.util.*;

import static org.junit.Assert.*;
import org.junit.Test;

import com.app.mpadmin.util.*;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.URL;
import com.app.mpadmin.domain.TdProduct;

/**
 * Basic tests for TdProductSupplier
 */
@SuppressWarnings("unused")
public class TdProductSupplierTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        TdProductSupplier model = new TdProductSupplier();
        assertFalse(model.isIdSet());
    }

    @Test
    public void isIdSetReturnsTrue() {
        TdProductSupplier model = new TdProductSupplier();
        model.setProductSupplierId(ValueGenerator.getUniqueInteger());
        assertNotNull(model.getProductSupplierId());
        assertTrue(model.isIdSet());
    }

    // test columns methods

    //-------------------------------------------------------------
    // Pure Many to Many
    //-------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @Test
    public void manyToMany_addProduct() {
        TdProductSupplier many1 = new TdProductSupplier();
        TdProduct many2 = new TdProduct();

        // add it
        many1.addProduct(many2);

        // check it is propagated
        assertTrue(many1.containsProduct(many2));
        // now let's remove it
        many1.removeProduct(many2);

        // check it is propagated
        assertFalse(many1.containsProduct(many2));
    }

    @Test
    public void toStringNotNull() {
        TdProductSupplier model = new TdProductSupplier();
        assertNotNull(model.toString());
    }

    @Test
    public void equalsUsingPk() {
        TdProductSupplier model1 = new TdProductSupplier();
        TdProductSupplier model2 = new TdProductSupplier();

        Integer productSupplierId = ValueGenerator.getUniqueInteger();
        model1.setProductSupplierId(productSupplierId);
        model2.setProductSupplierId(productSupplierId);

        model1.setProductSupplierDisplayName("a");
        model2.setProductSupplierDisplayName("a");

        model1.setProductSupplierAlternateName("a");
        model2.setProductSupplierAlternateName("a");

        model1.setProductSupplierPolicy("a");
        model2.setProductSupplierPolicy("a");

        model1.setProductSupplierSpecialization("a");
        model2.setProductSupplierSpecialization("a");

        model1.setMicroDescription("a");
        model2.setMicroDescription("a");

        model1.setShortDesc("a");
        model2.setShortDesc("a");

        model1.setLongDesc("a");
        model2.setLongDesc("a");

        model1.setProductSupplierRating(1);
        model2.setProductSupplierRating(1);

        model1.setProductSupplierType(1);
        model2.setProductSupplierType(1);

        model1.setProductSupplierLogoSmall("a");
        model2.setProductSupplierLogoSmall("a");

        model1.setProductSupplierLogoLong("a");
        model2.setProductSupplierLogoLong("a");

        model1.setProductSupplierStatus(true);
        model2.setProductSupplierStatus(true);

        model1.setCustom1("a");
        model2.setCustom1("a");

        model1.setCustom2("a");
        model2.setCustom2("a");

        model1.setSeoResources("a");
        model2.setSeoResources("a");

        model1.setSeoUrl("http://www.jaxio.com");
        model2.setSeoUrl("http://www.jaxio.com");

        model1.setSeoH1("a");
        model2.setSeoH1("a");

        model1.setSeoH2("a");
        model2.setSeoH2("a");

        model1.setMetaTitle("a");
        model2.setMetaTitle("a");

        model1.setMetaKeyword("a");
        model2.setMetaKeyword("a");

        model1.setMetaDescription("a");
        model2.setMetaDescription("a");

        model1.setCreationDate(new Date());
        model2.setCreationDate(new Date());

        model1.setUpdationDate(new Date());
        model2.setUpdationDate(new Date());
        assertTrue(model1.isIdSet());
        assertTrue(model2.isIdSet());
        assertTrue(model1.hashCode() == model2.hashCode());
        assertTrue(model1.equals(model2));
        assertTrue(model2.equals(model1));
    }
}