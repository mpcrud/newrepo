/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.app.mpadmin.domain;

import java.io.*;
import java.util.*;

import static org.junit.Assert.*;
import org.junit.Test;

import com.app.mpadmin.util.*;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.TIMESTAMP;
import static org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE;
import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import org.apache.log4j.Logger;
import org.hibernate.annotations.Cache;
import com.app.mpadmin.domain.TdUserActivity;

/**
 * Basic tests for TdUserActivityEvent
 */
@SuppressWarnings("unused")
public class TdUserActivityEventTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        TdUserActivityEvent model = new TdUserActivityEvent();
        assertFalse(model.isIdSet());
    }

    @Test
    public void isIdSetReturnsTrue() {
        TdUserActivityEvent model = new TdUserActivityEvent();
        model.setUserActivityEventId(ValueGenerator.getUniqueInteger());
        assertNotNull(model.getUserActivityEventId());
        assertTrue(model.isIdSet());
    }

    // test columns methods

    //-------------------------------------------------------------
    // Many to One:  TdUserActivityEvent.userActivityId ==> TdUserActivity.userActivityId
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setUserActivity() {
        TdUserActivityEvent many = new TdUserActivityEvent();

        // init
        TdUserActivity one = new TdUserActivity();

        one.setUserActivityId(ValueGenerator.getUniqueInteger());
        many.setUserActivity(one);

        // make sure it is propagated properly
        assertNotNull(many.getUserActivityId());
        assertEquals(one, many.getUserActivity());
        assertSame(many.getUserActivityId(), one.getUserActivityId());
        // now set it to back to null
        many.setUserActivity(null);

        // make sure null is propagated properly
        assertNull(many.getUserActivity());

        // make sure it is propagated on fk column as well
        assertNull(many.getUserActivityId());
    }

    @Test
    public void toStringNotNull() {
        TdUserActivityEvent model = new TdUserActivityEvent();
        assertNotNull(model.toString());
    }

    @Test
    public void equalsUsingPk() {
        TdUserActivityEvent model1 = new TdUserActivityEvent();
        TdUserActivityEvent model2 = new TdUserActivityEvent();

        Integer userActivityEventId = ValueGenerator.getUniqueInteger();
        model1.setUserActivityEventId(userActivityEventId);
        model2.setUserActivityEventId(userActivityEventId);

        model1.setUserActivityName("a");
        model2.setUserActivityName("a");

        model1.setUserEventName("a");
        model2.setUserEventName("a");

        model1.setUserEventDesc("a");
        model2.setUserEventDesc("a");

        model1.setCreationDate(new Date());
        model2.setCreationDate(new Date());

        model1.setUpdationDate(new Date());
        model2.setUpdationDate(new Date());
        assertTrue(model1.isIdSet());
        assertTrue(model2.isIdSet());
        assertTrue(model1.hashCode() == model2.hashCode());
        assertTrue(model1.equals(model2));
        assertTrue(model2.equals(model1));
    }
}